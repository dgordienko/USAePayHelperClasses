// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace UsaepayHelper.www.usaepay.com {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ueSoapServerBinding", Namespace="urn:usaepay")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SearchParam))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SyncLog))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(LineItem))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Bank))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CurrencyObject))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PriceTier))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ProductInventory))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FieldValue))]
    public partial class usaepayService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCustomerPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProductCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback addReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback adjustInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback bulkCurrencyConversionOperationCompleted;
        
        private System.Threading.SendOrPostCallback captureTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback convertTranToCustOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback createBatchUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback currencyConversionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCustomerPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProductCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback disableCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback emailTransactionReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback emailTransactionReceiptByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBankListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchUploadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCheckTraceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerPaymentMethodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProductCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProductCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProductInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReceiptByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReceiptsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupportedCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSyncLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSyncLogCurrentPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback pauseBatchUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback postAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback quickUpdateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback quickUpdateProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback refundTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback renderReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback renderReceiptByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback runBatchUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback runCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback runCheckCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback runCustomerTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback runQuickSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback runQuickCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback runAuthOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback runSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback runCheckSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback runTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback runTransactionAPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchBatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchBatchesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCustomersCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchProductsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchProductsCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchTransactionsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchTransactionsCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCustomersCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCustomerPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProductCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback voidTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback overrideTransactionOperationCompleted;
        
        /// CodeRemarks
        public usaepayService() {
            this.Url = "https://www.usaepay.com/soap/gate/EF01A7EA";
        }
        
        public usaepayService(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event addCustomerCompletedEventHandler addCustomerCompleted;
        
        /// CodeRemarks
        public event addCustomerPaymentMethodCompletedEventHandler addCustomerPaymentMethodCompleted;
        
        /// CodeRemarks
        public event addProductCompletedEventHandler addProductCompleted;
        
        /// CodeRemarks
        public event addProductCategoryCompletedEventHandler addProductCategoryCompleted;
        
        /// CodeRemarks
        public event addReceiptCompletedEventHandler addReceiptCompleted;
        
        /// CodeRemarks
        public event adjustInventoryCompletedEventHandler adjustInventoryCompleted;
        
        /// CodeRemarks
        public event bulkCurrencyConversionCompletedEventHandler bulkCurrencyConversionCompleted;
        
        /// CodeRemarks
        public event captureTransactionCompletedEventHandler captureTransactionCompleted;
        
        /// CodeRemarks
        public event closeBatchCompletedEventHandler closeBatchCompleted;
        
        /// CodeRemarks
        public event convertTranToCustCompletedEventHandler convertTranToCustCompleted;
        
        /// CodeRemarks
        public event copyCustomerCompletedEventHandler copyCustomerCompleted;
        
        /// CodeRemarks
        public event createBatchUploadCompletedEventHandler createBatchUploadCompleted;
        
        /// CodeRemarks
        public event currencyConversionCompletedEventHandler currencyConversionCompleted;
        
        /// CodeRemarks
        public event deleteCustomerCompletedEventHandler deleteCustomerCompleted;
        
        /// CodeRemarks
        public event deleteCustomerPaymentMethodCompletedEventHandler deleteCustomerPaymentMethodCompleted;
        
        /// CodeRemarks
        public event deleteProductCompletedEventHandler deleteProductCompleted;
        
        /// CodeRemarks
        public event deleteProductCategoryCompletedEventHandler deleteProductCategoryCompleted;
        
        /// CodeRemarks
        public event deleteReceiptCompletedEventHandler deleteReceiptCompleted;
        
        /// CodeRemarks
        public event disableCustomerCompletedEventHandler disableCustomerCompleted;
        
        /// CodeRemarks
        public event emailTransactionReceiptCompletedEventHandler emailTransactionReceiptCompleted;
        
        /// CodeRemarks
        public event emailTransactionReceiptByNameCompletedEventHandler emailTransactionReceiptByNameCompleted;
        
        /// CodeRemarks
        public event enableCustomerCompletedEventHandler enableCustomerCompleted;
        
        /// CodeRemarks
        public event getAccountDetailsCompletedEventHandler getAccountDetailsCompleted;
        
        /// CodeRemarks
        public event getBankListCompletedEventHandler getBankListCompleted;
        
        /// CodeRemarks
        public event getBatchStatusCompletedEventHandler getBatchStatusCompleted;
        
        /// CodeRemarks
        public event getBatchTransactionsCompletedEventHandler getBatchTransactionsCompleted;
        
        /// CodeRemarks
        public event getBatchUploadStatusCompletedEventHandler getBatchUploadStatusCompleted;
        
        /// CodeRemarks
        public event getCheckTraceCompletedEventHandler getCheckTraceCompleted;
        
        /// CodeRemarks
        public event getCustomerCompletedEventHandler getCustomerCompleted;
        
        /// CodeRemarks
        public event getCustomerHistoryCompletedEventHandler getCustomerHistoryCompleted;
        
        /// CodeRemarks
        public event getCustomerPaymentMethodCompletedEventHandler getCustomerPaymentMethodCompleted;
        
        /// CodeRemarks
        public event getCustomerPaymentMethodsCompletedEventHandler getCustomerPaymentMethodsCompleted;
        
        /// CodeRemarks
        public event getCustomerReportCompletedEventHandler getCustomerReportCompleted;
        
        /// CodeRemarks
        public event getCustomFieldsCompletedEventHandler getCustomFieldsCompleted;
        
        /// CodeRemarks
        public event getProductCompletedEventHandler getProductCompleted;
        
        /// CodeRemarks
        public event getProductCategoryCompletedEventHandler getProductCategoryCompleted;
        
        /// CodeRemarks
        public event getProductCategoriesCompletedEventHandler getProductCategoriesCompleted;
        
        /// CodeRemarks
        public event getProductInventoryCompletedEventHandler getProductInventoryCompleted;
        
        /// CodeRemarks
        public event getReceiptCompletedEventHandler getReceiptCompleted;
        
        /// CodeRemarks
        public event getReceiptByNameCompletedEventHandler getReceiptByNameCompleted;
        
        /// CodeRemarks
        public event getReceiptsCompletedEventHandler getReceiptsCompleted;
        
        /// CodeRemarks
        public event getReportCompletedEventHandler getReportCompleted;
        
        /// CodeRemarks
        public event getSupportedCurrenciesCompletedEventHandler getSupportedCurrenciesCompleted;
        
        /// CodeRemarks
        public event getSyncLogCompletedEventHandler getSyncLogCompleted;
        
        /// CodeRemarks
        public event getSyncLogCurrentPositionCompletedEventHandler getSyncLogCurrentPositionCompleted;
        
        /// CodeRemarks
        public event getSystemInfoCompletedEventHandler getSystemInfoCompleted;
        
        /// CodeRemarks
        public event getTransactionCompletedEventHandler getTransactionCompleted;
        
        /// CodeRemarks
        public event getTransactionCustomCompletedEventHandler getTransactionCustomCompleted;
        
        /// CodeRemarks
        public event getTransactionReportCompletedEventHandler getTransactionReportCompleted;
        
        /// CodeRemarks
        public event getTransactionStatusCompletedEventHandler getTransactionStatusCompleted;
        
        /// CodeRemarks
        public event moveCustomerCompletedEventHandler moveCustomerCompleted;
        
        /// CodeRemarks
        public event pauseBatchUploadCompletedEventHandler pauseBatchUploadCompleted;
        
        /// CodeRemarks
        public event postAuthCompletedEventHandler postAuthCompleted;
        
        /// CodeRemarks
        public event quickUpdateCustomerCompletedEventHandler quickUpdateCustomerCompleted;
        
        /// CodeRemarks
        public event quickUpdateProductCompletedEventHandler quickUpdateProductCompleted;
        
        /// CodeRemarks
        public event refundTransactionCompletedEventHandler refundTransactionCompleted;
        
        /// CodeRemarks
        public event renderReceiptCompletedEventHandler renderReceiptCompleted;
        
        /// CodeRemarks
        public event renderReceiptByNameCompletedEventHandler renderReceiptByNameCompleted;
        
        /// CodeRemarks
        public event runBatchUploadCompletedEventHandler runBatchUploadCompleted;
        
        /// CodeRemarks
        public event runCreditCompletedEventHandler runCreditCompleted;
        
        /// CodeRemarks
        public event runCheckCreditCompletedEventHandler runCheckCreditCompleted;
        
        /// CodeRemarks
        public event runCustomerTransactionCompletedEventHandler runCustomerTransactionCompleted;
        
        /// CodeRemarks
        public event runQuickSaleCompletedEventHandler runQuickSaleCompleted;
        
        /// CodeRemarks
        public event runQuickCreditCompletedEventHandler runQuickCreditCompleted;
        
        /// CodeRemarks
        public event runAuthOnlyCompletedEventHandler runAuthOnlyCompleted;
        
        /// CodeRemarks
        public event runSaleCompletedEventHandler runSaleCompleted;
        
        /// CodeRemarks
        public event runCheckSaleCompletedEventHandler runCheckSaleCompleted;
        
        /// CodeRemarks
        public event runTransactionCompletedEventHandler runTransactionCompleted;
        
        /// CodeRemarks
        public event runTransactionAPICompletedEventHandler runTransactionAPICompleted;
        
        /// CodeRemarks
        public event searchBatchesCompletedEventHandler searchBatchesCompleted;
        
        /// CodeRemarks
        public event searchBatchesCountCompletedEventHandler searchBatchesCountCompleted;
        
        /// CodeRemarks
        public event searchCustomerIDCompletedEventHandler searchCustomerIDCompleted;
        
        /// CodeRemarks
        public event searchCustomersCompletedEventHandler searchCustomersCompleted;
        
        /// CodeRemarks
        public event searchCustomersCountCompletedEventHandler searchCustomersCountCompleted;
        
        /// CodeRemarks
        public event searchProductsCompletedEventHandler searchProductsCompleted;
        
        /// CodeRemarks
        public event searchProductsCountCompletedEventHandler searchProductsCountCompleted;
        
        /// CodeRemarks
        public event searchProductsCustomCompletedEventHandler searchProductsCustomCompleted;
        
        /// CodeRemarks
        public event searchTransactionsCompletedEventHandler searchTransactionsCompleted;
        
        /// CodeRemarks
        public event searchTransactionsCountCompletedEventHandler searchTransactionsCountCompleted;
        
        /// CodeRemarks
        public event searchTransactionsCustomCompletedEventHandler searchTransactionsCustomCompleted;
        
        /// CodeRemarks
        public event searchCustomersCustomCompletedEventHandler searchCustomersCustomCompleted;
        
        /// CodeRemarks
        public event updateCustomerCompletedEventHandler updateCustomerCompleted;
        
        /// CodeRemarks
        public event updateCustomerPaymentMethodCompletedEventHandler updateCustomerPaymentMethodCompleted;
        
        /// CodeRemarks
        public event updateProductCompletedEventHandler updateProductCompleted;
        
        /// CodeRemarks
        public event updateProductCategoryCompletedEventHandler updateProductCategoryCompleted;
        
        /// CodeRemarks
        public event updateReceiptCompletedEventHandler updateReceiptCompleted;
        
        /// CodeRemarks
        public event voidTransactionCompletedEventHandler voidTransactionCompleted;
        
        /// CodeRemarks
        public event overrideTransactionCompletedEventHandler overrideTransactionCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCustomerReturn", DataType="integer")]
        public string addCustomer(ueSecurityToken Token, CustomerObject CustomerData) {
            object[] results = this.Invoke("addCustomer", new object[] {
                        Token,
                        CustomerData});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void addCustomerAsync(ueSecurityToken Token, CustomerObject CustomerData) {
            this.addCustomerAsync(Token, CustomerData, null);
        }
        
        /// CodeRemarks
        public void addCustomerAsync(ueSecurityToken Token, CustomerObject CustomerData, object userState) {
            if ((this.addCustomerOperationCompleted == null)) {
                this.addCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCustomerOperationCompleted);
            }
            this.InvokeAsync("addCustomer", new object[] {
                        Token,
                        CustomerData}, this.addCustomerOperationCompleted, userState);
        }
        
        private void OnaddCustomerOperationCompleted(object arg) {
            if ((this.addCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCustomerCompleted(this, new addCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCustomerPaymentMethodReturn", DataType="integer")]
        public string addCustomerPaymentMethod(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, PaymentMethod PaymentMethod, bool MakeDefault, bool Verify) {
            object[] results = this.Invoke("addCustomerPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        PaymentMethod,
                        MakeDefault,
                        Verify});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void addCustomerPaymentMethodAsync(ueSecurityToken Token, string CustNum, PaymentMethod PaymentMethod, bool MakeDefault, bool Verify) {
            this.addCustomerPaymentMethodAsync(Token, CustNum, PaymentMethod, MakeDefault, Verify, null);
        }
        
        /// CodeRemarks
        public void addCustomerPaymentMethodAsync(ueSecurityToken Token, string CustNum, PaymentMethod PaymentMethod, bool MakeDefault, bool Verify, object userState) {
            if ((this.addCustomerPaymentMethodOperationCompleted == null)) {
                this.addCustomerPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCustomerPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("addCustomerPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        PaymentMethod,
                        MakeDefault,
                        Verify}, this.addCustomerPaymentMethodOperationCompleted, userState);
        }
        
        private void OnaddCustomerPaymentMethodOperationCompleted(object arg) {
            if ((this.addCustomerPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCustomerPaymentMethodCompleted(this, new addCustomerPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("ProductRefNum")]
        public string addProduct(ueSecurityToken Token, Product Product) {
            object[] results = this.Invoke("addProduct", new object[] {
                        Token,
                        Product});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void addProductAsync(ueSecurityToken Token, Product Product) {
            this.addProductAsync(Token, Product, null);
        }
        
        /// CodeRemarks
        public void addProductAsync(ueSecurityToken Token, Product Product, object userState) {
            if ((this.addProductOperationCompleted == null)) {
                this.addProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProductOperationCompleted);
            }
            this.InvokeAsync("addProduct", new object[] {
                        Token,
                        Product}, this.addProductOperationCompleted, userState);
        }
        
        private void OnaddProductOperationCompleted(object arg) {
            if ((this.addProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProductCompleted(this, new addProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("ProductCategoryRefNum")]
        public string addProductCategory(ueSecurityToken Token, ProductCategory ProductCategory) {
            object[] results = this.Invoke("addProductCategory", new object[] {
                        Token,
                        ProductCategory});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void addProductCategoryAsync(ueSecurityToken Token, ProductCategory ProductCategory) {
            this.addProductCategoryAsync(Token, ProductCategory, null);
        }
        
        /// CodeRemarks
        public void addProductCategoryAsync(ueSecurityToken Token, ProductCategory ProductCategory, object userState) {
            if ((this.addProductCategoryOperationCompleted == null)) {
                this.addProductCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProductCategoryOperationCompleted);
            }
            this.InvokeAsync("addProductCategory", new object[] {
                        Token,
                        ProductCategory}, this.addProductCategoryOperationCompleted, userState);
        }
        
        private void OnaddProductCategoryOperationCompleted(object arg) {
            if ((this.addProductCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProductCategoryCompleted(this, new addProductCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("addReceiptResponseReturn", DataType="integer")]
        public string addReceipt(ueSecurityToken Token, Receipt Receipt) {
            object[] results = this.Invoke("addReceipt", new object[] {
                        Token,
                        Receipt});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void addReceiptAsync(ueSecurityToken Token, Receipt Receipt) {
            this.addReceiptAsync(Token, Receipt, null);
        }
        
        /// CodeRemarks
        public void addReceiptAsync(ueSecurityToken Token, Receipt Receipt, object userState) {
            if ((this.addReceiptOperationCompleted == null)) {
                this.addReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddReceiptOperationCompleted);
            }
            this.InvokeAsync("addReceipt", new object[] {
                        Token,
                        Receipt}, this.addReceiptOperationCompleted, userState);
        }
        
        private void OnaddReceiptOperationCompleted(object arg) {
            if ((this.addReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addReceiptCompleted(this, new addReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("adjustInventoryReturn")]
        public ProductInventory[] adjustInventory(ueSecurityToken Token, string ProductRefNum, ProductInventory[] Inventory) {
            object[] results = this.Invoke("adjustInventory", new object[] {
                        Token,
                        ProductRefNum,
                        Inventory});
            return ((ProductInventory[])(results[0]));
        }
        
        /// CodeRemarks
        public void adjustInventoryAsync(ueSecurityToken Token, string ProductRefNum, ProductInventory[] Inventory) {
            this.adjustInventoryAsync(Token, ProductRefNum, Inventory, null);
        }
        
        /// CodeRemarks
        public void adjustInventoryAsync(ueSecurityToken Token, string ProductRefNum, ProductInventory[] Inventory, object userState) {
            if ((this.adjustInventoryOperationCompleted == null)) {
                this.adjustInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnadjustInventoryOperationCompleted);
            }
            this.InvokeAsync("adjustInventory", new object[] {
                        Token,
                        ProductRefNum,
                        Inventory}, this.adjustInventoryOperationCompleted, userState);
        }
        
        private void OnadjustInventoryOperationCompleted(object arg) {
            if ((this.adjustInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.adjustInventoryCompleted(this, new adjustInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("bulkCurrencyConversionReturn")]
        public CurrencyConversion[] bulkCurrencyConversion(ueSecurityToken Token, string FromCurrency, string ToCurrency, double[] Amounts) {
            object[] results = this.Invoke("bulkCurrencyConversion", new object[] {
                        Token,
                        FromCurrency,
                        ToCurrency,
                        Amounts});
            return ((CurrencyConversion[])(results[0]));
        }
        
        /// CodeRemarks
        public void bulkCurrencyConversionAsync(ueSecurityToken Token, string FromCurrency, string ToCurrency, double[] Amounts) {
            this.bulkCurrencyConversionAsync(Token, FromCurrency, ToCurrency, Amounts, null);
        }
        
        /// CodeRemarks
        public void bulkCurrencyConversionAsync(ueSecurityToken Token, string FromCurrency, string ToCurrency, double[] Amounts, object userState) {
            if ((this.bulkCurrencyConversionOperationCompleted == null)) {
                this.bulkCurrencyConversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbulkCurrencyConversionOperationCompleted);
            }
            this.InvokeAsync("bulkCurrencyConversion", new object[] {
                        Token,
                        FromCurrency,
                        ToCurrency,
                        Amounts}, this.bulkCurrencyConversionOperationCompleted, userState);
        }
        
        private void OnbulkCurrencyConversionOperationCompleted(object arg) {
            if ((this.bulkCurrencyConversionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bulkCurrencyConversionCompleted(this, new bulkCurrencyConversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("captureTransactionReturn")]
        public TransactionResponse captureTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, double Amount) {
            object[] results = this.Invoke("captureTransaction", new object[] {
                        Token,
                        RefNum,
                        Amount});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void captureTransactionAsync(ueSecurityToken Token, string RefNum, double Amount) {
            this.captureTransactionAsync(Token, RefNum, Amount, null);
        }
        
        /// CodeRemarks
        public void captureTransactionAsync(ueSecurityToken Token, string RefNum, double Amount, object userState) {
            if ((this.captureTransactionOperationCompleted == null)) {
                this.captureTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncaptureTransactionOperationCompleted);
            }
            this.InvokeAsync("captureTransaction", new object[] {
                        Token,
                        RefNum,
                        Amount}, this.captureTransactionOperationCompleted, userState);
        }
        
        private void OncaptureTransactionOperationCompleted(object arg) {
            if ((this.captureTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.captureTransactionCompleted(this, new captureTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("closeBatchReturn")]
        public bool closeBatch(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string BatchRefNum) {
            object[] results = this.Invoke("closeBatch", new object[] {
                        Token,
                        BatchRefNum});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void closeBatchAsync(ueSecurityToken Token, string BatchRefNum) {
            this.closeBatchAsync(Token, BatchRefNum, null);
        }
        
        /// CodeRemarks
        public void closeBatchAsync(ueSecurityToken Token, string BatchRefNum, object userState) {
            if ((this.closeBatchOperationCompleted == null)) {
                this.closeBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseBatchOperationCompleted);
            }
            this.InvokeAsync("closeBatch", new object[] {
                        Token,
                        BatchRefNum}, this.closeBatchOperationCompleted, userState);
        }
        
        private void OncloseBatchOperationCompleted(object arg) {
            if ((this.closeBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeBatchCompleted(this, new closeBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("convertTranToCustReturn", DataType="integer")]
        public string convertTranToCust(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, FieldValue[] UpdateData) {
            object[] results = this.Invoke("convertTranToCust", new object[] {
                        Token,
                        RefNum,
                        UpdateData});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void convertTranToCustAsync(ueSecurityToken Token, string RefNum, FieldValue[] UpdateData) {
            this.convertTranToCustAsync(Token, RefNum, UpdateData, null);
        }
        
        /// CodeRemarks
        public void convertTranToCustAsync(ueSecurityToken Token, string RefNum, FieldValue[] UpdateData, object userState) {
            if ((this.convertTranToCustOperationCompleted == null)) {
                this.convertTranToCustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconvertTranToCustOperationCompleted);
            }
            this.InvokeAsync("convertTranToCust", new object[] {
                        Token,
                        RefNum,
                        UpdateData}, this.convertTranToCustOperationCompleted, userState);
        }
        
        private void OnconvertTranToCustOperationCompleted(object arg) {
            if ((this.convertTranToCustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.convertTranToCustCompleted(this, new convertTranToCustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("copyCustomerReturn", DataType="integer")]
        public string copyCustomer(ueSecurityToken CopyFromToken, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, ueSecurityToken CopyToToken) {
            object[] results = this.Invoke("copyCustomer", new object[] {
                        CopyFromToken,
                        CustNum,
                        CopyToToken});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void copyCustomerAsync(ueSecurityToken CopyFromToken, string CustNum, ueSecurityToken CopyToToken) {
            this.copyCustomerAsync(CopyFromToken, CustNum, CopyToToken, null);
        }
        
        /// CodeRemarks
        public void copyCustomerAsync(ueSecurityToken CopyFromToken, string CustNum, ueSecurityToken CopyToToken, object userState) {
            if ((this.copyCustomerOperationCompleted == null)) {
                this.copyCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyCustomerOperationCompleted);
            }
            this.InvokeAsync("copyCustomer", new object[] {
                        CopyFromToken,
                        CustNum,
                        CopyToToken}, this.copyCustomerOperationCompleted, userState);
        }
        
        private void OncopyCustomerOperationCompleted(object arg) {
            if ((this.copyCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyCustomerCompleted(this, new copyCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("createBatchUploadReturn")]
        public BatchUploadStatus createBatchUpload(ueSecurityToken Token, string FileName, bool AutoStart, string Format, string Encoding, string[] Fields, string Data, bool OverrideDuplicates) {
            object[] results = this.Invoke("createBatchUpload", new object[] {
                        Token,
                        FileName,
                        AutoStart,
                        Format,
                        Encoding,
                        Fields,
                        Data,
                        OverrideDuplicates});
            return ((BatchUploadStatus)(results[0]));
        }
        
        /// CodeRemarks
        public void createBatchUploadAsync(ueSecurityToken Token, string FileName, bool AutoStart, string Format, string Encoding, string[] Fields, string Data, bool OverrideDuplicates) {
            this.createBatchUploadAsync(Token, FileName, AutoStart, Format, Encoding, Fields, Data, OverrideDuplicates, null);
        }
        
        /// CodeRemarks
        public void createBatchUploadAsync(ueSecurityToken Token, string FileName, bool AutoStart, string Format, string Encoding, string[] Fields, string Data, bool OverrideDuplicates, object userState) {
            if ((this.createBatchUploadOperationCompleted == null)) {
                this.createBatchUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateBatchUploadOperationCompleted);
            }
            this.InvokeAsync("createBatchUpload", new object[] {
                        Token,
                        FileName,
                        AutoStart,
                        Format,
                        Encoding,
                        Fields,
                        Data,
                        OverrideDuplicates}, this.createBatchUploadOperationCompleted, userState);
        }
        
        private void OncreateBatchUploadOperationCompleted(object arg) {
            if ((this.createBatchUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createBatchUploadCompleted(this, new createBatchUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("currencyConversionReturn")]
        public CurrencyConversion currencyConversion(ueSecurityToken Token, string FromCurrency, string ToCurrency, double Amount) {
            object[] results = this.Invoke("currencyConversion", new object[] {
                        Token,
                        FromCurrency,
                        ToCurrency,
                        Amount});
            return ((CurrencyConversion)(results[0]));
        }
        
        /// CodeRemarks
        public void currencyConversionAsync(ueSecurityToken Token, string FromCurrency, string ToCurrency, double Amount) {
            this.currencyConversionAsync(Token, FromCurrency, ToCurrency, Amount, null);
        }
        
        /// CodeRemarks
        public void currencyConversionAsync(ueSecurityToken Token, string FromCurrency, string ToCurrency, double Amount, object userState) {
            if ((this.currencyConversionOperationCompleted == null)) {
                this.currencyConversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncurrencyConversionOperationCompleted);
            }
            this.InvokeAsync("currencyConversion", new object[] {
                        Token,
                        FromCurrency,
                        ToCurrency,
                        Amount}, this.currencyConversionOperationCompleted, userState);
        }
        
        private void OncurrencyConversionOperationCompleted(object arg) {
            if ((this.currencyConversionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.currencyConversionCompleted(this, new currencyConversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCustomerReturn")]
        public bool deleteCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("deleteCustomer", new object[] {
                        Token,
                        CustNum});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void deleteCustomerAsync(ueSecurityToken Token, string CustNum) {
            this.deleteCustomerAsync(Token, CustNum, null);
        }
        
        /// CodeRemarks
        public void deleteCustomerAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.deleteCustomerOperationCompleted == null)) {
                this.deleteCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCustomerOperationCompleted);
            }
            this.InvokeAsync("deleteCustomer", new object[] {
                        Token,
                        CustNum}, this.deleteCustomerOperationCompleted, userState);
        }
        
        private void OndeleteCustomerOperationCompleted(object arg) {
            if ((this.deleteCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCustomerCompleted(this, new deleteCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCustomerPaymentMethodReturn")]
        public bool deleteCustomerPaymentMethod(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Custnum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string PaymentMethodID) {
            object[] results = this.Invoke("deleteCustomerPaymentMethod", new object[] {
                        Token,
                        Custnum,
                        PaymentMethodID});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void deleteCustomerPaymentMethodAsync(ueSecurityToken Token, string Custnum, string PaymentMethodID) {
            this.deleteCustomerPaymentMethodAsync(Token, Custnum, PaymentMethodID, null);
        }
        
        /// CodeRemarks
        public void deleteCustomerPaymentMethodAsync(ueSecurityToken Token, string Custnum, string PaymentMethodID, object userState) {
            if ((this.deleteCustomerPaymentMethodOperationCompleted == null)) {
                this.deleteCustomerPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCustomerPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("deleteCustomerPaymentMethod", new object[] {
                        Token,
                        Custnum,
                        PaymentMethodID}, this.deleteCustomerPaymentMethodOperationCompleted, userState);
        }
        
        private void OndeleteCustomerPaymentMethodOperationCompleted(object arg) {
            if ((this.deleteCustomerPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCustomerPaymentMethodCompleted(this, new deleteCustomerPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteProductReturn")]
        public bool deleteProduct(ueSecurityToken Token, string ProductRefNum) {
            object[] results = this.Invoke("deleteProduct", new object[] {
                        Token,
                        ProductRefNum});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void deleteProductAsync(ueSecurityToken Token, string ProductRefNum) {
            this.deleteProductAsync(Token, ProductRefNum, null);
        }
        
        /// CodeRemarks
        public void deleteProductAsync(ueSecurityToken Token, string ProductRefNum, object userState) {
            if ((this.deleteProductOperationCompleted == null)) {
                this.deleteProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProductOperationCompleted);
            }
            this.InvokeAsync("deleteProduct", new object[] {
                        Token,
                        ProductRefNum}, this.deleteProductOperationCompleted, userState);
        }
        
        private void OndeleteProductOperationCompleted(object arg) {
            if ((this.deleteProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProductCompleted(this, new deleteProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteProductCategoryReturn")]
        public bool deleteProductCategory(ueSecurityToken Token, string ProductCategoryRefNum) {
            object[] results = this.Invoke("deleteProductCategory", new object[] {
                        Token,
                        ProductCategoryRefNum});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void deleteProductCategoryAsync(ueSecurityToken Token, string ProductCategoryRefNum) {
            this.deleteProductCategoryAsync(Token, ProductCategoryRefNum, null);
        }
        
        /// CodeRemarks
        public void deleteProductCategoryAsync(ueSecurityToken Token, string ProductCategoryRefNum, object userState) {
            if ((this.deleteProductCategoryOperationCompleted == null)) {
                this.deleteProductCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProductCategoryOperationCompleted);
            }
            this.InvokeAsync("deleteProductCategory", new object[] {
                        Token,
                        ProductCategoryRefNum}, this.deleteProductCategoryOperationCompleted, userState);
        }
        
        private void OndeleteProductCategoryOperationCompleted(object arg) {
            if ((this.deleteProductCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProductCategoryCompleted(this, new deleteProductCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteReceiptReturn")]
        public bool deleteReceipt(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string ReceiptRefNum) {
            object[] results = this.Invoke("deleteReceipt", new object[] {
                        Token,
                        ReceiptRefNum});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void deleteReceiptAsync(ueSecurityToken Token, string ReceiptRefNum) {
            this.deleteReceiptAsync(Token, ReceiptRefNum, null);
        }
        
        /// CodeRemarks
        public void deleteReceiptAsync(ueSecurityToken Token, string ReceiptRefNum, object userState) {
            if ((this.deleteReceiptOperationCompleted == null)) {
                this.deleteReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteReceiptOperationCompleted);
            }
            this.InvokeAsync("deleteReceipt", new object[] {
                        Token,
                        ReceiptRefNum}, this.deleteReceiptOperationCompleted, userState);
        }
        
        private void OndeleteReceiptOperationCompleted(object arg) {
            if ((this.deleteReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteReceiptCompleted(this, new deleteReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("disableCustomerReturn")]
        public bool disableCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("disableCustomer", new object[] {
                        Token,
                        CustNum});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void disableCustomerAsync(ueSecurityToken Token, string CustNum) {
            this.disableCustomerAsync(Token, CustNum, null);
        }
        
        /// CodeRemarks
        public void disableCustomerAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.disableCustomerOperationCompleted == null)) {
                this.disableCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisableCustomerOperationCompleted);
            }
            this.InvokeAsync("disableCustomer", new object[] {
                        Token,
                        CustNum}, this.disableCustomerOperationCompleted, userState);
        }
        
        private void OndisableCustomerOperationCompleted(object arg) {
            if ((this.disableCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disableCustomerCompleted(this, new disableCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("emailTransactionReceiptReturn")]
        public bool emailTransactionReceipt(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string ReceiptRefNum, string Email) {
            object[] results = this.Invoke("emailTransactionReceipt", new object[] {
                        Token,
                        RefNum,
                        ReceiptRefNum,
                        Email});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void emailTransactionReceiptAsync(ueSecurityToken Token, string RefNum, string ReceiptRefNum, string Email) {
            this.emailTransactionReceiptAsync(Token, RefNum, ReceiptRefNum, Email, null);
        }
        
        /// CodeRemarks
        public void emailTransactionReceiptAsync(ueSecurityToken Token, string RefNum, string ReceiptRefNum, string Email, object userState) {
            if ((this.emailTransactionReceiptOperationCompleted == null)) {
                this.emailTransactionReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnemailTransactionReceiptOperationCompleted);
            }
            this.InvokeAsync("emailTransactionReceipt", new object[] {
                        Token,
                        RefNum,
                        ReceiptRefNum,
                        Email}, this.emailTransactionReceiptOperationCompleted, userState);
        }
        
        private void OnemailTransactionReceiptOperationCompleted(object arg) {
            if ((this.emailTransactionReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.emailTransactionReceiptCompleted(this, new emailTransactionReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("emailTransactionReceiptByNameReturn")]
        public bool emailTransactionReceiptByName(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, string ReceiptName, string Email) {
            object[] results = this.Invoke("emailTransactionReceiptByName", new object[] {
                        Token,
                        RefNum,
                        ReceiptName,
                        Email});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void emailTransactionReceiptByNameAsync(ueSecurityToken Token, string RefNum, string ReceiptName, string Email) {
            this.emailTransactionReceiptByNameAsync(Token, RefNum, ReceiptName, Email, null);
        }
        
        /// CodeRemarks
        public void emailTransactionReceiptByNameAsync(ueSecurityToken Token, string RefNum, string ReceiptName, string Email, object userState) {
            if ((this.emailTransactionReceiptByNameOperationCompleted == null)) {
                this.emailTransactionReceiptByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnemailTransactionReceiptByNameOperationCompleted);
            }
            this.InvokeAsync("emailTransactionReceiptByName", new object[] {
                        Token,
                        RefNum,
                        ReceiptName,
                        Email}, this.emailTransactionReceiptByNameOperationCompleted, userState);
        }
        
        private void OnemailTransactionReceiptByNameOperationCompleted(object arg) {
            if ((this.emailTransactionReceiptByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.emailTransactionReceiptByNameCompleted(this, new emailTransactionReceiptByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("enableCustomerReturn")]
        public bool enableCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("enableCustomer", new object[] {
                        Token,
                        CustNum});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void enableCustomerAsync(ueSecurityToken Token, string CustNum) {
            this.enableCustomerAsync(Token, CustNum, null);
        }
        
        /// CodeRemarks
        public void enableCustomerAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.enableCustomerOperationCompleted == null)) {
                this.enableCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableCustomerOperationCompleted);
            }
            this.InvokeAsync("enableCustomer", new object[] {
                        Token,
                        CustNum}, this.enableCustomerOperationCompleted, userState);
        }
        
        private void OnenableCustomerOperationCompleted(object arg) {
            if ((this.enableCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableCustomerCompleted(this, new enableCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAccountDetailsReturn")]
        public AccountDetails getAccountDetails(ueSecurityToken Token) {
            object[] results = this.Invoke("getAccountDetails", new object[] {
                        Token});
            return ((AccountDetails)(results[0]));
        }
        
        /// CodeRemarks
        public void getAccountDetailsAsync(ueSecurityToken Token) {
            this.getAccountDetailsAsync(Token, null);
        }
        
        /// CodeRemarks
        public void getAccountDetailsAsync(ueSecurityToken Token, object userState) {
            if ((this.getAccountDetailsOperationCompleted == null)) {
                this.getAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("getAccountDetails", new object[] {
                        Token}, this.getAccountDetailsOperationCompleted, userState);
        }
        
        private void OngetAccountDetailsOperationCompleted(object arg) {
            if ((this.getAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountDetailsCompleted(this, new getAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBankListDetailsReturn")]
        public Bank[] getBankList(ueSecurityToken Token) {
            object[] results = this.Invoke("getBankList", new object[] {
                        Token});
            return ((Bank[])(results[0]));
        }
        
        /// CodeRemarks
        public void getBankListAsync(ueSecurityToken Token) {
            this.getBankListAsync(Token, null);
        }
        
        /// CodeRemarks
        public void getBankListAsync(ueSecurityToken Token, object userState) {
            if ((this.getBankListOperationCompleted == null)) {
                this.getBankListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBankListOperationCompleted);
            }
            this.InvokeAsync("getBankList", new object[] {
                        Token}, this.getBankListOperationCompleted, userState);
        }
        
        private void OngetBankListOperationCompleted(object arg) {
            if ((this.getBankListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBankListCompleted(this, new getBankListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBatchStatusReturn")]
        public BatchStatus getBatchStatus(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string BatchRefNum) {
            object[] results = this.Invoke("getBatchStatus", new object[] {
                        Token,
                        BatchRefNum});
            return ((BatchStatus)(results[0]));
        }
        
        /// CodeRemarks
        public void getBatchStatusAsync(ueSecurityToken Token, string BatchRefNum) {
            this.getBatchStatusAsync(Token, BatchRefNum, null);
        }
        
        /// CodeRemarks
        public void getBatchStatusAsync(ueSecurityToken Token, string BatchRefNum, object userState) {
            if ((this.getBatchStatusOperationCompleted == null)) {
                this.getBatchStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchStatusOperationCompleted);
            }
            this.InvokeAsync("getBatchStatus", new object[] {
                        Token,
                        BatchRefNum}, this.getBatchStatusOperationCompleted, userState);
        }
        
        private void OngetBatchStatusOperationCompleted(object arg) {
            if ((this.getBatchStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchStatusCompleted(this, new getBatchStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBatchTransactionsReturn")]
        public TransactionObject[] getBatchTransactions(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string BatchRefNum) {
            object[] results = this.Invoke("getBatchTransactions", new object[] {
                        Token,
                        BatchRefNum});
            return ((TransactionObject[])(results[0]));
        }
        
        /// CodeRemarks
        public void getBatchTransactionsAsync(ueSecurityToken Token, string BatchRefNum) {
            this.getBatchTransactionsAsync(Token, BatchRefNum, null);
        }
        
        /// CodeRemarks
        public void getBatchTransactionsAsync(ueSecurityToken Token, string BatchRefNum, object userState) {
            if ((this.getBatchTransactionsOperationCompleted == null)) {
                this.getBatchTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchTransactionsOperationCompleted);
            }
            this.InvokeAsync("getBatchTransactions", new object[] {
                        Token,
                        BatchRefNum}, this.getBatchTransactionsOperationCompleted, userState);
        }
        
        private void OngetBatchTransactionsOperationCompleted(object arg) {
            if ((this.getBatchTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchTransactionsCompleted(this, new getBatchTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBatchUploadStatusReturn")]
        public BatchUploadStatus getBatchUploadStatus(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string UploadRefNum) {
            object[] results = this.Invoke("getBatchUploadStatus", new object[] {
                        Token,
                        UploadRefNum});
            return ((BatchUploadStatus)(results[0]));
        }
        
        /// CodeRemarks
        public void getBatchUploadStatusAsync(ueSecurityToken Token, string UploadRefNum) {
            this.getBatchUploadStatusAsync(Token, UploadRefNum, null);
        }
        
        /// CodeRemarks
        public void getBatchUploadStatusAsync(ueSecurityToken Token, string UploadRefNum, object userState) {
            if ((this.getBatchUploadStatusOperationCompleted == null)) {
                this.getBatchUploadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchUploadStatusOperationCompleted);
            }
            this.InvokeAsync("getBatchUploadStatus", new object[] {
                        Token,
                        UploadRefNum}, this.getBatchUploadStatusOperationCompleted, userState);
        }
        
        private void OngetBatchUploadStatusOperationCompleted(object arg) {
            if ((this.getBatchUploadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchUploadStatusCompleted(this, new getBatchUploadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCheckTraceReturn")]
        public CheckTrace getCheckTrace(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum) {
            object[] results = this.Invoke("getCheckTrace", new object[] {
                        Token,
                        RefNum});
            return ((CheckTrace)(results[0]));
        }
        
        /// CodeRemarks
        public void getCheckTraceAsync(ueSecurityToken Token, string RefNum) {
            this.getCheckTraceAsync(Token, RefNum, null);
        }
        
        /// CodeRemarks
        public void getCheckTraceAsync(ueSecurityToken Token, string RefNum, object userState) {
            if ((this.getCheckTraceOperationCompleted == null)) {
                this.getCheckTraceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCheckTraceOperationCompleted);
            }
            this.InvokeAsync("getCheckTrace", new object[] {
                        Token,
                        RefNum}, this.getCheckTraceOperationCompleted, userState);
        }
        
        private void OngetCheckTraceOperationCompleted(object arg) {
            if ((this.getCheckTraceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCheckTraceCompleted(this, new getCheckTraceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerReturn")]
        public CustomerObject getCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("getCustomer", new object[] {
                        Token,
                        CustNum});
            return ((CustomerObject)(results[0]));
        }
        
        /// CodeRemarks
        public void getCustomerAsync(ueSecurityToken Token, string CustNum) {
            this.getCustomerAsync(Token, CustNum, null);
        }
        
        /// CodeRemarks
        public void getCustomerAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.getCustomerOperationCompleted == null)) {
                this.getCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerOperationCompleted);
            }
            this.InvokeAsync("getCustomer", new object[] {
                        Token,
                        CustNum}, this.getCustomerOperationCompleted, userState);
        }
        
        private void OngetCustomerOperationCompleted(object arg) {
            if ((this.getCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerCompleted(this, new getCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerHistoryReturn")]
        public TransactionSearchResult getCustomerHistory(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("getCustomerHistory", new object[] {
                        Token,
                        CustNum});
            return ((TransactionSearchResult)(results[0]));
        }
        
        /// CodeRemarks
        public void getCustomerHistoryAsync(ueSecurityToken Token, string CustNum) {
            this.getCustomerHistoryAsync(Token, CustNum, null);
        }
        
        /// CodeRemarks
        public void getCustomerHistoryAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.getCustomerHistoryOperationCompleted == null)) {
                this.getCustomerHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerHistoryOperationCompleted);
            }
            this.InvokeAsync("getCustomerHistory", new object[] {
                        Token,
                        CustNum}, this.getCustomerHistoryOperationCompleted, userState);
        }
        
        private void OngetCustomerHistoryOperationCompleted(object arg) {
            if ((this.getCustomerHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerHistoryCompleted(this, new getCustomerHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerPaymentMethodReturn")]
        public PaymentMethod getCustomerPaymentMethod(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string MethodID) {
            object[] results = this.Invoke("getCustomerPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        MethodID});
            return ((PaymentMethod)(results[0]));
        }
        
        /// CodeRemarks
        public void getCustomerPaymentMethodAsync(ueSecurityToken Token, string CustNum, string MethodID) {
            this.getCustomerPaymentMethodAsync(Token, CustNum, MethodID, null);
        }
        
        /// CodeRemarks
        public void getCustomerPaymentMethodAsync(ueSecurityToken Token, string CustNum, string MethodID, object userState) {
            if ((this.getCustomerPaymentMethodOperationCompleted == null)) {
                this.getCustomerPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("getCustomerPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        MethodID}, this.getCustomerPaymentMethodOperationCompleted, userState);
        }
        
        private void OngetCustomerPaymentMethodOperationCompleted(object arg) {
            if ((this.getCustomerPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerPaymentMethodCompleted(this, new getCustomerPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerPaymentMethodsReturn")]
        public PaymentMethod[] getCustomerPaymentMethods(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("getCustomerPaymentMethods", new object[] {
                        Token,
                        CustNum});
            return ((PaymentMethod[])(results[0]));
        }
        
        /// CodeRemarks
        public void getCustomerPaymentMethodsAsync(ueSecurityToken Token, string CustNum) {
            this.getCustomerPaymentMethodsAsync(Token, CustNum, null);
        }
        
        /// CodeRemarks
        public void getCustomerPaymentMethodsAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.getCustomerPaymentMethodsOperationCompleted == null)) {
                this.getCustomerPaymentMethodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerPaymentMethodsOperationCompleted);
            }
            this.InvokeAsync("getCustomerPaymentMethods", new object[] {
                        Token,
                        CustNum}, this.getCustomerPaymentMethodsOperationCompleted, userState);
        }
        
        private void OngetCustomerPaymentMethodsOperationCompleted(object arg) {
            if ((this.getCustomerPaymentMethodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerPaymentMethodsCompleted(this, new getCustomerPaymentMethodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerReportReturn")]
        public string getCustomerReport(ueSecurityToken Token, string Report, FieldValue[] Options, string Format) {
            object[] results = this.Invoke("getCustomerReport", new object[] {
                        Token,
                        Report,
                        Options,
                        Format});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getCustomerReportAsync(ueSecurityToken Token, string Report, FieldValue[] Options, string Format) {
            this.getCustomerReportAsync(Token, Report, Options, Format, null);
        }
        
        /// CodeRemarks
        public void getCustomerReportAsync(ueSecurityToken Token, string Report, FieldValue[] Options, string Format, object userState) {
            if ((this.getCustomerReportOperationCompleted == null)) {
                this.getCustomerReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerReportOperationCompleted);
            }
            this.InvokeAsync("getCustomerReport", new object[] {
                        Token,
                        Report,
                        Options,
                        Format}, this.getCustomerReportOperationCompleted, userState);
        }
        
        private void OngetCustomerReportOperationCompleted(object arg) {
            if ((this.getCustomerReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerReportCompleted(this, new getCustomerReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomFieldsReturn")]
        public FieldValue[] getCustomFields(ueSecurityToken Token) {
            object[] results = this.Invoke("getCustomFields", new object[] {
                        Token});
            return ((FieldValue[])(results[0]));
        }
        
        /// CodeRemarks
        public void getCustomFieldsAsync(ueSecurityToken Token) {
            this.getCustomFieldsAsync(Token, null);
        }
        
        /// CodeRemarks
        public void getCustomFieldsAsync(ueSecurityToken Token, object userState) {
            if ((this.getCustomFieldsOperationCompleted == null)) {
                this.getCustomFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomFieldsOperationCompleted);
            }
            this.InvokeAsync("getCustomFields", new object[] {
                        Token}, this.getCustomFieldsOperationCompleted, userState);
        }
        
        private void OngetCustomFieldsOperationCompleted(object arg) {
            if ((this.getCustomFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomFieldsCompleted(this, new getCustomFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProductReturn")]
        public Product getProduct(ueSecurityToken Token, string ProductRefNum) {
            object[] results = this.Invoke("getProduct", new object[] {
                        Token,
                        ProductRefNum});
            return ((Product)(results[0]));
        }
        
        /// CodeRemarks
        public void getProductAsync(ueSecurityToken Token, string ProductRefNum) {
            this.getProductAsync(Token, ProductRefNum, null);
        }
        
        /// CodeRemarks
        public void getProductAsync(ueSecurityToken Token, string ProductRefNum, object userState) {
            if ((this.getProductOperationCompleted == null)) {
                this.getProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProductOperationCompleted);
            }
            this.InvokeAsync("getProduct", new object[] {
                        Token,
                        ProductRefNum}, this.getProductOperationCompleted, userState);
        }
        
        private void OngetProductOperationCompleted(object arg) {
            if ((this.getProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProductCompleted(this, new getProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProductCategoryReturn")]
        public ProductCategory getProductCategory(ueSecurityToken Token, string ProductCategoryRefNum) {
            object[] results = this.Invoke("getProductCategory", new object[] {
                        Token,
                        ProductCategoryRefNum});
            return ((ProductCategory)(results[0]));
        }
        
        /// CodeRemarks
        public void getProductCategoryAsync(ueSecurityToken Token, string ProductCategoryRefNum) {
            this.getProductCategoryAsync(Token, ProductCategoryRefNum, null);
        }
        
        /// CodeRemarks
        public void getProductCategoryAsync(ueSecurityToken Token, string ProductCategoryRefNum, object userState) {
            if ((this.getProductCategoryOperationCompleted == null)) {
                this.getProductCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProductCategoryOperationCompleted);
            }
            this.InvokeAsync("getProductCategory", new object[] {
                        Token,
                        ProductCategoryRefNum}, this.getProductCategoryOperationCompleted, userState);
        }
        
        private void OngetProductCategoryOperationCompleted(object arg) {
            if ((this.getProductCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProductCategoryCompleted(this, new getProductCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProductCategoriesReturn")]
        public ProductCategory[] getProductCategories(ueSecurityToken Token) {
            object[] results = this.Invoke("getProductCategories", new object[] {
                        Token});
            return ((ProductCategory[])(results[0]));
        }
        
        /// CodeRemarks
        public void getProductCategoriesAsync(ueSecurityToken Token) {
            this.getProductCategoriesAsync(Token, null);
        }
        
        /// CodeRemarks
        public void getProductCategoriesAsync(ueSecurityToken Token, object userState) {
            if ((this.getProductCategoriesOperationCompleted == null)) {
                this.getProductCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProductCategoriesOperationCompleted);
            }
            this.InvokeAsync("getProductCategories", new object[] {
                        Token}, this.getProductCategoriesOperationCompleted, userState);
        }
        
        private void OngetProductCategoriesOperationCompleted(object arg) {
            if ((this.getProductCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProductCategoriesCompleted(this, new getProductCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProductInventoryReturn")]
        public ProductInventory[] getProductInventory(ueSecurityToken Token, string ProductRefNum) {
            object[] results = this.Invoke("getProductInventory", new object[] {
                        Token,
                        ProductRefNum});
            return ((ProductInventory[])(results[0]));
        }
        
        /// CodeRemarks
        public void getProductInventoryAsync(ueSecurityToken Token, string ProductRefNum) {
            this.getProductInventoryAsync(Token, ProductRefNum, null);
        }
        
        /// CodeRemarks
        public void getProductInventoryAsync(ueSecurityToken Token, string ProductRefNum, object userState) {
            if ((this.getProductInventoryOperationCompleted == null)) {
                this.getProductInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProductInventoryOperationCompleted);
            }
            this.InvokeAsync("getProductInventory", new object[] {
                        Token,
                        ProductRefNum}, this.getProductInventoryOperationCompleted, userState);
        }
        
        private void OngetProductInventoryOperationCompleted(object arg) {
            if ((this.getProductInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProductInventoryCompleted(this, new getProductInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getReceiptReturn")]
        public Receipt getReceipt(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string ReceiptRefNum) {
            object[] results = this.Invoke("getReceipt", new object[] {
                        Token,
                        ReceiptRefNum});
            return ((Receipt)(results[0]));
        }
        
        /// CodeRemarks
        public void getReceiptAsync(ueSecurityToken Token, string ReceiptRefNum) {
            this.getReceiptAsync(Token, ReceiptRefNum, null);
        }
        
        /// CodeRemarks
        public void getReceiptAsync(ueSecurityToken Token, string ReceiptRefNum, object userState) {
            if ((this.getReceiptOperationCompleted == null)) {
                this.getReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReceiptOperationCompleted);
            }
            this.InvokeAsync("getReceipt", new object[] {
                        Token,
                        ReceiptRefNum}, this.getReceiptOperationCompleted, userState);
        }
        
        private void OngetReceiptOperationCompleted(object arg) {
            if ((this.getReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReceiptCompleted(this, new getReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getReceiptByNameReturn")]
        public Receipt getReceiptByName(ueSecurityToken Token, string Name) {
            object[] results = this.Invoke("getReceiptByName", new object[] {
                        Token,
                        Name});
            return ((Receipt)(results[0]));
        }
        
        /// CodeRemarks
        public void getReceiptByNameAsync(ueSecurityToken Token, string Name) {
            this.getReceiptByNameAsync(Token, Name, null);
        }
        
        /// CodeRemarks
        public void getReceiptByNameAsync(ueSecurityToken Token, string Name, object userState) {
            if ((this.getReceiptByNameOperationCompleted == null)) {
                this.getReceiptByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReceiptByNameOperationCompleted);
            }
            this.InvokeAsync("getReceiptByName", new object[] {
                        Token,
                        Name}, this.getReceiptByNameOperationCompleted, userState);
        }
        
        private void OngetReceiptByNameOperationCompleted(object arg) {
            if ((this.getReceiptByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReceiptByNameCompleted(this, new getReceiptByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getReceiptsReturn")]
        public Receipt[] getReceipts(ueSecurityToken Token, string Target) {
            object[] results = this.Invoke("getReceipts", new object[] {
                        Token,
                        Target});
            return ((Receipt[])(results[0]));
        }
        
        /// CodeRemarks
        public void getReceiptsAsync(ueSecurityToken Token, string Target) {
            this.getReceiptsAsync(Token, Target, null);
        }
        
        /// CodeRemarks
        public void getReceiptsAsync(ueSecurityToken Token, string Target, object userState) {
            if ((this.getReceiptsOperationCompleted == null)) {
                this.getReceiptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReceiptsOperationCompleted);
            }
            this.InvokeAsync("getReceipts", new object[] {
                        Token,
                        Target}, this.getReceiptsOperationCompleted, userState);
        }
        
        private void OngetReceiptsOperationCompleted(object arg) {
            if ((this.getReceiptsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReceiptsCompleted(this, new getReceiptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getReportReturn")]
        public string getReport(ueSecurityToken Token, string Report, FieldValue[] Options, string Format) {
            object[] results = this.Invoke("getReport", new object[] {
                        Token,
                        Report,
                        Options,
                        Format});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getReportAsync(ueSecurityToken Token, string Report, FieldValue[] Options, string Format) {
            this.getReportAsync(Token, Report, Options, Format, null);
        }
        
        /// CodeRemarks
        public void getReportAsync(ueSecurityToken Token, string Report, FieldValue[] Options, string Format, object userState) {
            if ((this.getReportOperationCompleted == null)) {
                this.getReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReportOperationCompleted);
            }
            this.InvokeAsync("getReport", new object[] {
                        Token,
                        Report,
                        Options,
                        Format}, this.getReportOperationCompleted, userState);
        }
        
        private void OngetReportOperationCompleted(object arg) {
            if ((this.getReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReportCompleted(this, new getReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSupportedCurrenciesReturn")]
        public CurrencyObject[] getSupportedCurrencies(ueSecurityToken Token) {
            object[] results = this.Invoke("getSupportedCurrencies", new object[] {
                        Token});
            return ((CurrencyObject[])(results[0]));
        }
        
        /// CodeRemarks
        public void getSupportedCurrenciesAsync(ueSecurityToken Token) {
            this.getSupportedCurrenciesAsync(Token, null);
        }
        
        /// CodeRemarks
        public void getSupportedCurrenciesAsync(ueSecurityToken Token, object userState) {
            if ((this.getSupportedCurrenciesOperationCompleted == null)) {
                this.getSupportedCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupportedCurrenciesOperationCompleted);
            }
            this.InvokeAsync("getSupportedCurrencies", new object[] {
                        Token}, this.getSupportedCurrenciesOperationCompleted, userState);
        }
        
        private void OngetSupportedCurrenciesOperationCompleted(object arg) {
            if ((this.getSupportedCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupportedCurrenciesCompleted(this, new getSupportedCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSyncLogReturn")]
        public SyncLog[] getSyncLog(ueSecurityToken Token, string ObjectName, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string FromPosition) {
            object[] results = this.Invoke("getSyncLog", new object[] {
                        Token,
                        ObjectName,
                        FromPosition});
            return ((SyncLog[])(results[0]));
        }
        
        /// CodeRemarks
        public void getSyncLogAsync(ueSecurityToken Token, string ObjectName, string FromPosition) {
            this.getSyncLogAsync(Token, ObjectName, FromPosition, null);
        }
        
        /// CodeRemarks
        public void getSyncLogAsync(ueSecurityToken Token, string ObjectName, string FromPosition, object userState) {
            if ((this.getSyncLogOperationCompleted == null)) {
                this.getSyncLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSyncLogOperationCompleted);
            }
            this.InvokeAsync("getSyncLog", new object[] {
                        Token,
                        ObjectName,
                        FromPosition}, this.getSyncLogOperationCompleted, userState);
        }
        
        private void OngetSyncLogOperationCompleted(object arg) {
            if ((this.getSyncLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSyncLogCompleted(this, new getSyncLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSyncLogCurrentPositionReturn", DataType="integer")]
        public string getSyncLogCurrentPosition(ueSecurityToken Token, string ObjectName) {
            object[] results = this.Invoke("getSyncLogCurrentPosition", new object[] {
                        Token,
                        ObjectName});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getSyncLogCurrentPositionAsync(ueSecurityToken Token, string ObjectName) {
            this.getSyncLogCurrentPositionAsync(Token, ObjectName, null);
        }
        
        /// CodeRemarks
        public void getSyncLogCurrentPositionAsync(ueSecurityToken Token, string ObjectName, object userState) {
            if ((this.getSyncLogCurrentPositionOperationCompleted == null)) {
                this.getSyncLogCurrentPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSyncLogCurrentPositionOperationCompleted);
            }
            this.InvokeAsync("getSyncLogCurrentPosition", new object[] {
                        Token,
                        ObjectName}, this.getSyncLogCurrentPositionOperationCompleted, userState);
        }
        
        private void OngetSyncLogCurrentPositionOperationCompleted(object arg) {
            if ((this.getSyncLogCurrentPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSyncLogCurrentPositionCompleted(this, new getSyncLogCurrentPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSystemInfoReturn")]
        public SystemInfo getSystemInfo(ueSecurityToken Token) {
            object[] results = this.Invoke("getSystemInfo", new object[] {
                        Token});
            return ((SystemInfo)(results[0]));
        }
        
        /// CodeRemarks
        public void getSystemInfoAsync(ueSecurityToken Token) {
            this.getSystemInfoAsync(Token, null);
        }
        
        /// CodeRemarks
        public void getSystemInfoAsync(ueSecurityToken Token, object userState) {
            if ((this.getSystemInfoOperationCompleted == null)) {
                this.getSystemInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemInfoOperationCompleted);
            }
            this.InvokeAsync("getSystemInfo", new object[] {
                        Token}, this.getSystemInfoOperationCompleted, userState);
        }
        
        private void OngetSystemInfoOperationCompleted(object arg) {
            if ((this.getSystemInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemInfoCompleted(this, new getSystemInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionReturn")]
        public TransactionObject getTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum) {
            object[] results = this.Invoke("getTransaction", new object[] {
                        Token,
                        RefNum});
            return ((TransactionObject)(results[0]));
        }
        
        /// CodeRemarks
        public void getTransactionAsync(ueSecurityToken Token, string RefNum) {
            this.getTransactionAsync(Token, RefNum, null);
        }
        
        /// CodeRemarks
        public void getTransactionAsync(ueSecurityToken Token, string RefNum, object userState) {
            if ((this.getTransactionOperationCompleted == null)) {
                this.getTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionOperationCompleted);
            }
            this.InvokeAsync("getTransaction", new object[] {
                        Token,
                        RefNum}, this.getTransactionOperationCompleted, userState);
        }
        
        private void OngetTransactionOperationCompleted(object arg) {
            if ((this.getTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionCompleted(this, new getTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionCustomReturn")]
        public FieldValue[] getTransactionCustom(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, string[] Fields) {
            object[] results = this.Invoke("getTransactionCustom", new object[] {
                        Token,
                        RefNum,
                        Fields});
            return ((FieldValue[])(results[0]));
        }
        
        /// CodeRemarks
        public void getTransactionCustomAsync(ueSecurityToken Token, string RefNum, string[] Fields) {
            this.getTransactionCustomAsync(Token, RefNum, Fields, null);
        }
        
        /// CodeRemarks
        public void getTransactionCustomAsync(ueSecurityToken Token, string RefNum, string[] Fields, object userState) {
            if ((this.getTransactionCustomOperationCompleted == null)) {
                this.getTransactionCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionCustomOperationCompleted);
            }
            this.InvokeAsync("getTransactionCustom", new object[] {
                        Token,
                        RefNum,
                        Fields}, this.getTransactionCustomOperationCompleted, userState);
        }
        
        private void OngetTransactionCustomOperationCompleted(object arg) {
            if ((this.getTransactionCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionCustomCompleted(this, new getTransactionCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionReportReturn")]
        public string getTransactionReport(ueSecurityToken Token, string StartDate, string EndDate, string Report, string Format) {
            object[] results = this.Invoke("getTransactionReport", new object[] {
                        Token,
                        StartDate,
                        EndDate,
                        Report,
                        Format});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getTransactionReportAsync(ueSecurityToken Token, string StartDate, string EndDate, string Report, string Format) {
            this.getTransactionReportAsync(Token, StartDate, EndDate, Report, Format, null);
        }
        
        /// CodeRemarks
        public void getTransactionReportAsync(ueSecurityToken Token, string StartDate, string EndDate, string Report, string Format, object userState) {
            if ((this.getTransactionReportOperationCompleted == null)) {
                this.getTransactionReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionReportOperationCompleted);
            }
            this.InvokeAsync("getTransactionReport", new object[] {
                        Token,
                        StartDate,
                        EndDate,
                        Report,
                        Format}, this.getTransactionReportOperationCompleted, userState);
        }
        
        private void OngetTransactionReportOperationCompleted(object arg) {
            if ((this.getTransactionReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionReportCompleted(this, new getTransactionReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionStatusReturn")]
        public TransactionResponse getTransactionStatus(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum) {
            object[] results = this.Invoke("getTransactionStatus", new object[] {
                        Token,
                        RefNum});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void getTransactionStatusAsync(ueSecurityToken Token, string RefNum) {
            this.getTransactionStatusAsync(Token, RefNum, null);
        }
        
        /// CodeRemarks
        public void getTransactionStatusAsync(ueSecurityToken Token, string RefNum, object userState) {
            if ((this.getTransactionStatusOperationCompleted == null)) {
                this.getTransactionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionStatusOperationCompleted);
            }
            this.InvokeAsync("getTransactionStatus", new object[] {
                        Token,
                        RefNum}, this.getTransactionStatusOperationCompleted, userState);
        }
        
        private void OngetTransactionStatusOperationCompleted(object arg) {
            if ((this.getTransactionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionStatusCompleted(this, new getTransactionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("moveCustomerReturn", DataType="integer")]
        public string moveCustomer(ueSecurityToken MoveFromToken, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, ueSecurityToken MoveToToken) {
            object[] results = this.Invoke("moveCustomer", new object[] {
                        MoveFromToken,
                        CustNum,
                        MoveToToken});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void moveCustomerAsync(ueSecurityToken MoveFromToken, string CustNum, ueSecurityToken MoveToToken) {
            this.moveCustomerAsync(MoveFromToken, CustNum, MoveToToken, null);
        }
        
        /// CodeRemarks
        public void moveCustomerAsync(ueSecurityToken MoveFromToken, string CustNum, ueSecurityToken MoveToToken, object userState) {
            if ((this.moveCustomerOperationCompleted == null)) {
                this.moveCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveCustomerOperationCompleted);
            }
            this.InvokeAsync("moveCustomer", new object[] {
                        MoveFromToken,
                        CustNum,
                        MoveToToken}, this.moveCustomerOperationCompleted, userState);
        }
        
        private void OnmoveCustomerOperationCompleted(object arg) {
            if ((this.moveCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveCustomerCompleted(this, new moveCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("pauseBatchUploadReturn")]
        public bool pauseBatchUpload(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string UploadRefNum) {
            object[] results = this.Invoke("pauseBatchUpload", new object[] {
                        Token,
                        UploadRefNum});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void pauseBatchUploadAsync(ueSecurityToken Token, string UploadRefNum) {
            this.pauseBatchUploadAsync(Token, UploadRefNum, null);
        }
        
        /// CodeRemarks
        public void pauseBatchUploadAsync(ueSecurityToken Token, string UploadRefNum, object userState) {
            if ((this.pauseBatchUploadOperationCompleted == null)) {
                this.pauseBatchUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpauseBatchUploadOperationCompleted);
            }
            this.InvokeAsync("pauseBatchUpload", new object[] {
                        Token,
                        UploadRefNum}, this.pauseBatchUploadOperationCompleted, userState);
        }
        
        private void OnpauseBatchUploadOperationCompleted(object arg) {
            if ((this.pauseBatchUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pauseBatchUploadCompleted(this, new pauseBatchUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("postAuthReturn")]
        public TransactionResponse postAuth(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("postAuth", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void postAuthAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.postAuthAsync(Token, Params, null);
        }
        
        /// CodeRemarks
        public void postAuthAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.postAuthOperationCompleted == null)) {
                this.postAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostAuthOperationCompleted);
            }
            this.InvokeAsync("postAuth", new object[] {
                        Token,
                        Params}, this.postAuthOperationCompleted, userState);
        }
        
        private void OnpostAuthOperationCompleted(object arg) {
            if ((this.postAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postAuthCompleted(this, new postAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("quickUpdateCustomerReturn")]
        public bool quickUpdateCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, FieldValue[] UpdateData) {
            object[] results = this.Invoke("quickUpdateCustomer", new object[] {
                        Token,
                        CustNum,
                        UpdateData});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void quickUpdateCustomerAsync(ueSecurityToken Token, string CustNum, FieldValue[] UpdateData) {
            this.quickUpdateCustomerAsync(Token, CustNum, UpdateData, null);
        }
        
        /// CodeRemarks
        public void quickUpdateCustomerAsync(ueSecurityToken Token, string CustNum, FieldValue[] UpdateData, object userState) {
            if ((this.quickUpdateCustomerOperationCompleted == null)) {
                this.quickUpdateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnquickUpdateCustomerOperationCompleted);
            }
            this.InvokeAsync("quickUpdateCustomer", new object[] {
                        Token,
                        CustNum,
                        UpdateData}, this.quickUpdateCustomerOperationCompleted, userState);
        }
        
        private void OnquickUpdateCustomerOperationCompleted(object arg) {
            if ((this.quickUpdateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.quickUpdateCustomerCompleted(this, new quickUpdateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("quickUpdateProductReturn")]
        public bool quickUpdateProduct(ueSecurityToken Token, string ProductRefNum, FieldValue[] UpdateData) {
            object[] results = this.Invoke("quickUpdateProduct", new object[] {
                        Token,
                        ProductRefNum,
                        UpdateData});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void quickUpdateProductAsync(ueSecurityToken Token, string ProductRefNum, FieldValue[] UpdateData) {
            this.quickUpdateProductAsync(Token, ProductRefNum, UpdateData, null);
        }
        
        /// CodeRemarks
        public void quickUpdateProductAsync(ueSecurityToken Token, string ProductRefNum, FieldValue[] UpdateData, object userState) {
            if ((this.quickUpdateProductOperationCompleted == null)) {
                this.quickUpdateProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnquickUpdateProductOperationCompleted);
            }
            this.InvokeAsync("quickUpdateProduct", new object[] {
                        Token,
                        ProductRefNum,
                        UpdateData}, this.quickUpdateProductOperationCompleted, userState);
        }
        
        private void OnquickUpdateProductOperationCompleted(object arg) {
            if ((this.quickUpdateProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.quickUpdateProductCompleted(this, new quickUpdateProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("refundTransactionReturn")]
        public TransactionResponse refundTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, double Amount) {
            object[] results = this.Invoke("refundTransaction", new object[] {
                        Token,
                        RefNum,
                        Amount});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void refundTransactionAsync(ueSecurityToken Token, string RefNum, double Amount) {
            this.refundTransactionAsync(Token, RefNum, Amount, null);
        }
        
        /// CodeRemarks
        public void refundTransactionAsync(ueSecurityToken Token, string RefNum, double Amount, object userState) {
            if ((this.refundTransactionOperationCompleted == null)) {
                this.refundTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrefundTransactionOperationCompleted);
            }
            this.InvokeAsync("refundTransaction", new object[] {
                        Token,
                        RefNum,
                        Amount}, this.refundTransactionOperationCompleted, userState);
        }
        
        private void OnrefundTransactionOperationCompleted(object arg) {
            if ((this.refundTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.refundTransactionCompleted(this, new refundTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("renderReceiptReturn")]
        public string renderReceipt(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string ReceiptRefNum, string ContentType) {
            object[] results = this.Invoke("renderReceipt", new object[] {
                        Token,
                        RefNum,
                        ReceiptRefNum,
                        ContentType});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void renderReceiptAsync(ueSecurityToken Token, string RefNum, string ReceiptRefNum, string ContentType) {
            this.renderReceiptAsync(Token, RefNum, ReceiptRefNum, ContentType, null);
        }
        
        /// CodeRemarks
        public void renderReceiptAsync(ueSecurityToken Token, string RefNum, string ReceiptRefNum, string ContentType, object userState) {
            if ((this.renderReceiptOperationCompleted == null)) {
                this.renderReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenderReceiptOperationCompleted);
            }
            this.InvokeAsync("renderReceipt", new object[] {
                        Token,
                        RefNum,
                        ReceiptRefNum,
                        ContentType}, this.renderReceiptOperationCompleted, userState);
        }
        
        private void OnrenderReceiptOperationCompleted(object arg) {
            if ((this.renderReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renderReceiptCompleted(this, new renderReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("renderReceiptByNameReturn")]
        public string renderReceiptByName(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, string ReceiptName, string ContentType) {
            object[] results = this.Invoke("renderReceiptByName", new object[] {
                        Token,
                        RefNum,
                        ReceiptName,
                        ContentType});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void renderReceiptByNameAsync(ueSecurityToken Token, string RefNum, string ReceiptName, string ContentType) {
            this.renderReceiptByNameAsync(Token, RefNum, ReceiptName, ContentType, null);
        }
        
        /// CodeRemarks
        public void renderReceiptByNameAsync(ueSecurityToken Token, string RefNum, string ReceiptName, string ContentType, object userState) {
            if ((this.renderReceiptByNameOperationCompleted == null)) {
                this.renderReceiptByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenderReceiptByNameOperationCompleted);
            }
            this.InvokeAsync("renderReceiptByName", new object[] {
                        Token,
                        RefNum,
                        ReceiptName,
                        ContentType}, this.renderReceiptByNameOperationCompleted, userState);
        }
        
        private void OnrenderReceiptByNameOperationCompleted(object arg) {
            if ((this.renderReceiptByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renderReceiptByNameCompleted(this, new renderReceiptByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runBatchUploadReturn")]
        public bool runBatchUpload(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string UploadRefNum) {
            object[] results = this.Invoke("runBatchUpload", new object[] {
                        Token,
                        UploadRefNum});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void runBatchUploadAsync(ueSecurityToken Token, string UploadRefNum) {
            this.runBatchUploadAsync(Token, UploadRefNum, null);
        }
        
        /// CodeRemarks
        public void runBatchUploadAsync(ueSecurityToken Token, string UploadRefNum, object userState) {
            if ((this.runBatchUploadOperationCompleted == null)) {
                this.runBatchUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunBatchUploadOperationCompleted);
            }
            this.InvokeAsync("runBatchUpload", new object[] {
                        Token,
                        UploadRefNum}, this.runBatchUploadOperationCompleted, userState);
        }
        
        private void OnrunBatchUploadOperationCompleted(object arg) {
            if ((this.runBatchUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runBatchUploadCompleted(this, new runBatchUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runCreditReturn")]
        public TransactionResponse runCredit(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runCredit", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void runCreditAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runCreditAsync(Token, Params, null);
        }
        
        /// CodeRemarks
        public void runCreditAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runCreditOperationCompleted == null)) {
                this.runCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunCreditOperationCompleted);
            }
            this.InvokeAsync("runCredit", new object[] {
                        Token,
                        Params}, this.runCreditOperationCompleted, userState);
        }
        
        private void OnrunCreditOperationCompleted(object arg) {
            if ((this.runCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCreditCompleted(this, new runCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runCheckCreditReturn")]
        public TransactionResponse runCheckCredit(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runCheckCredit", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void runCheckCreditAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runCheckCreditAsync(Token, Params, null);
        }
        
        /// CodeRemarks
        public void runCheckCreditAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runCheckCreditOperationCompleted == null)) {
                this.runCheckCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunCheckCreditOperationCompleted);
            }
            this.InvokeAsync("runCheckCredit", new object[] {
                        Token,
                        Params}, this.runCheckCreditOperationCompleted, userState);
        }
        
        private void OnrunCheckCreditOperationCompleted(object arg) {
            if ((this.runCheckCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCheckCreditCompleted(this, new runCheckCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runCustomerTransactionReturn")]
        public TransactionResponse runCustomerTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string PaymentMethodID, CustomerTransactionRequest Parameters) {
            object[] results = this.Invoke("runCustomerTransaction", new object[] {
                        Token,
                        CustNum,
                        PaymentMethodID,
                        Parameters});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void runCustomerTransactionAsync(ueSecurityToken Token, string CustNum, string PaymentMethodID, CustomerTransactionRequest Parameters) {
            this.runCustomerTransactionAsync(Token, CustNum, PaymentMethodID, Parameters, null);
        }
        
        /// CodeRemarks
        public void runCustomerTransactionAsync(ueSecurityToken Token, string CustNum, string PaymentMethodID, CustomerTransactionRequest Parameters, object userState) {
            if ((this.runCustomerTransactionOperationCompleted == null)) {
                this.runCustomerTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunCustomerTransactionOperationCompleted);
            }
            this.InvokeAsync("runCustomerTransaction", new object[] {
                        Token,
                        CustNum,
                        PaymentMethodID,
                        Parameters}, this.runCustomerTransactionOperationCompleted, userState);
        }
        
        private void OnrunCustomerTransactionOperationCompleted(object arg) {
            if ((this.runCustomerTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCustomerTransactionCompleted(this, new runCustomerTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runQuickSaleReturn")]
        public TransactionResponse runQuickSale(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, TransactionDetail Details, bool AuthOnly) {
            object[] results = this.Invoke("runQuickSale", new object[] {
                        Token,
                        RefNum,
                        Details,
                        AuthOnly});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void runQuickSaleAsync(ueSecurityToken Token, string RefNum, TransactionDetail Details, bool AuthOnly) {
            this.runQuickSaleAsync(Token, RefNum, Details, AuthOnly, null);
        }
        
        /// CodeRemarks
        public void runQuickSaleAsync(ueSecurityToken Token, string RefNum, TransactionDetail Details, bool AuthOnly, object userState) {
            if ((this.runQuickSaleOperationCompleted == null)) {
                this.runQuickSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunQuickSaleOperationCompleted);
            }
            this.InvokeAsync("runQuickSale", new object[] {
                        Token,
                        RefNum,
                        Details,
                        AuthOnly}, this.runQuickSaleOperationCompleted, userState);
        }
        
        private void OnrunQuickSaleOperationCompleted(object arg) {
            if ((this.runQuickSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runQuickSaleCompleted(this, new runQuickSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runQuickCreditReturn")]
        public TransactionResponse runQuickCredit(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, TransactionDetail Details) {
            object[] results = this.Invoke("runQuickCredit", new object[] {
                        Token,
                        RefNum,
                        Details});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void runQuickCreditAsync(ueSecurityToken Token, string RefNum, TransactionDetail Details) {
            this.runQuickCreditAsync(Token, RefNum, Details, null);
        }
        
        /// CodeRemarks
        public void runQuickCreditAsync(ueSecurityToken Token, string RefNum, TransactionDetail Details, object userState) {
            if ((this.runQuickCreditOperationCompleted == null)) {
                this.runQuickCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunQuickCreditOperationCompleted);
            }
            this.InvokeAsync("runQuickCredit", new object[] {
                        Token,
                        RefNum,
                        Details}, this.runQuickCreditOperationCompleted, userState);
        }
        
        private void OnrunQuickCreditOperationCompleted(object arg) {
            if ((this.runQuickCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runQuickCreditCompleted(this, new runQuickCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runAuthOnlyReturn")]
        public TransactionResponse runAuthOnly(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runAuthOnly", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void runAuthOnlyAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runAuthOnlyAsync(Token, Params, null);
        }
        
        /// CodeRemarks
        public void runAuthOnlyAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runAuthOnlyOperationCompleted == null)) {
                this.runAuthOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunAuthOnlyOperationCompleted);
            }
            this.InvokeAsync("runAuthOnly", new object[] {
                        Token,
                        Params}, this.runAuthOnlyOperationCompleted, userState);
        }
        
        private void OnrunAuthOnlyOperationCompleted(object arg) {
            if ((this.runAuthOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runAuthOnlyCompleted(this, new runAuthOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runSaleReturn")]
        public TransactionResponse runSale(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runSale", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void runSaleAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runSaleAsync(Token, Params, null);
        }
        
        /// CodeRemarks
        public void runSaleAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runSaleOperationCompleted == null)) {
                this.runSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunSaleOperationCompleted);
            }
            this.InvokeAsync("runSale", new object[] {
                        Token,
                        Params}, this.runSaleOperationCompleted, userState);
        }
        
        private void OnrunSaleOperationCompleted(object arg) {
            if ((this.runSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runSaleCompleted(this, new runSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runCheckSaleReturn")]
        public TransactionResponse runCheckSale(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runCheckSale", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void runCheckSaleAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runCheckSaleAsync(Token, Params, null);
        }
        
        /// CodeRemarks
        public void runCheckSaleAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runCheckSaleOperationCompleted == null)) {
                this.runCheckSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunCheckSaleOperationCompleted);
            }
            this.InvokeAsync("runCheckSale", new object[] {
                        Token,
                        Params}, this.runCheckSaleOperationCompleted, userState);
        }
        
        private void OnrunCheckSaleOperationCompleted(object arg) {
            if ((this.runCheckSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCheckSaleCompleted(this, new runCheckSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runTransactionReturn")]
        public TransactionResponse runTransaction(ueSecurityToken Token, TransactionRequestObject Parameters) {
            object[] results = this.Invoke("runTransaction", new object[] {
                        Token,
                        Parameters});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void runTransactionAsync(ueSecurityToken Token, TransactionRequestObject Parameters) {
            this.runTransactionAsync(Token, Parameters, null);
        }
        
        /// CodeRemarks
        public void runTransactionAsync(ueSecurityToken Token, TransactionRequestObject Parameters, object userState) {
            if ((this.runTransactionOperationCompleted == null)) {
                this.runTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunTransactionOperationCompleted);
            }
            this.InvokeAsync("runTransaction", new object[] {
                        Token,
                        Parameters}, this.runTransactionOperationCompleted, userState);
        }
        
        private void OnrunTransactionOperationCompleted(object arg) {
            if ((this.runTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runTransactionCompleted(this, new runTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runTransactionAPIReturn")]
        public TransactionResponse runTransactionAPI(ueSecurityToken Token, FieldValue[] Parameters) {
            object[] results = this.Invoke("runTransactionAPI", new object[] {
                        Token,
                        Parameters});
            return ((TransactionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void runTransactionAPIAsync(ueSecurityToken Token, FieldValue[] Parameters) {
            this.runTransactionAPIAsync(Token, Parameters, null);
        }
        
        /// CodeRemarks
        public void runTransactionAPIAsync(ueSecurityToken Token, FieldValue[] Parameters, object userState) {
            if ((this.runTransactionAPIOperationCompleted == null)) {
                this.runTransactionAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunTransactionAPIOperationCompleted);
            }
            this.InvokeAsync("runTransactionAPI", new object[] {
                        Token,
                        Parameters}, this.runTransactionAPIOperationCompleted, userState);
        }
        
        private void OnrunTransactionAPIOperationCompleted(object arg) {
            if ((this.runTransactionAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runTransactionAPICompleted(this, new runTransactionAPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchBatchesReturn")]
        public BatchSearchResult searchBatches(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchBatches", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((BatchSearchResult)(results[0]));
        }
        
        /// CodeRemarks
        public void searchBatchesAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchBatchesAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// CodeRemarks
        public void searchBatchesAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchBatchesOperationCompleted == null)) {
                this.searchBatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchBatchesOperationCompleted);
            }
            this.InvokeAsync("searchBatches", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchBatchesOperationCompleted, userState);
        }
        
        private void OnsearchBatchesOperationCompleted(object arg) {
            if ((this.searchBatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchBatchesCompleted(this, new searchBatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchBatchesCountReturn")]
        public BatchSearchResult searchBatchesCount(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchBatchesCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((BatchSearchResult)(results[0]));
        }
        
        /// CodeRemarks
        public void searchBatchesCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchBatchesCountAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// CodeRemarks
        public void searchBatchesCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchBatchesCountOperationCompleted == null)) {
                this.searchBatchesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchBatchesCountOperationCompleted);
            }
            this.InvokeAsync("searchBatchesCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchBatchesCountOperationCompleted, userState);
        }
        
        private void OnsearchBatchesCountOperationCompleted(object arg) {
            if ((this.searchBatchesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchBatchesCountCompleted(this, new searchBatchesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchCustomerIDReturn", DataType="integer")]
        public string searchCustomerID(ueSecurityToken Token, string CustID) {
            object[] results = this.Invoke("searchCustomerID", new object[] {
                        Token,
                        CustID});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void searchCustomerIDAsync(ueSecurityToken Token, string CustID) {
            this.searchCustomerIDAsync(Token, CustID, null);
        }
        
        /// CodeRemarks
        public void searchCustomerIDAsync(ueSecurityToken Token, string CustID, object userState) {
            if ((this.searchCustomerIDOperationCompleted == null)) {
                this.searchCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomerIDOperationCompleted);
            }
            this.InvokeAsync("searchCustomerID", new object[] {
                        Token,
                        CustID}, this.searchCustomerIDOperationCompleted, userState);
        }
        
        private void OnsearchCustomerIDOperationCompleted(object arg) {
            if ((this.searchCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomerIDCompleted(this, new searchCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchCustomersReturn")]
        public CustomerSearchResult searchCustomers(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchCustomers", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((CustomerSearchResult)(results[0]));
        }
        
        /// CodeRemarks
        public void searchCustomersAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchCustomersAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// CodeRemarks
        public void searchCustomersAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchCustomersOperationCompleted == null)) {
                this.searchCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomersOperationCompleted);
            }
            this.InvokeAsync("searchCustomers", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchCustomersOperationCompleted, userState);
        }
        
        private void OnsearchCustomersOperationCompleted(object arg) {
            if ((this.searchCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomersCompleted(this, new searchCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchCustomersCountReturn")]
        public CustomerSearchResult searchCustomersCount(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchCustomersCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((CustomerSearchResult)(results[0]));
        }
        
        /// CodeRemarks
        public void searchCustomersCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchCustomersCountAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// CodeRemarks
        public void searchCustomersCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchCustomersCountOperationCompleted == null)) {
                this.searchCustomersCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomersCountOperationCompleted);
            }
            this.InvokeAsync("searchCustomersCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchCustomersCountOperationCompleted, userState);
        }
        
        private void OnsearchCustomersCountOperationCompleted(object arg) {
            if ((this.searchCustomersCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomersCountCompleted(this, new searchCustomersCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchProductsReturn")]
        public ProductSearchResult searchProducts(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchProducts", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((ProductSearchResult)(results[0]));
        }
        
        /// CodeRemarks
        public void searchProductsAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchProductsAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// CodeRemarks
        public void searchProductsAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchProductsOperationCompleted == null)) {
                this.searchProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchProductsOperationCompleted);
            }
            this.InvokeAsync("searchProducts", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchProductsOperationCompleted, userState);
        }
        
        private void OnsearchProductsOperationCompleted(object arg) {
            if ((this.searchProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchProductsCompleted(this, new searchProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchProductsCountReturn")]
        public ProductSearchResult searchProductsCount(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchProductsCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((ProductSearchResult)(results[0]));
        }
        
        /// CodeRemarks
        public void searchProductsCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchProductsCountAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// CodeRemarks
        public void searchProductsCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchProductsCountOperationCompleted == null)) {
                this.searchProductsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchProductsCountOperationCompleted);
            }
            this.InvokeAsync("searchProductsCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchProductsCountOperationCompleted, userState);
        }
        
        private void OnsearchProductsCountOperationCompleted(object arg) {
            if ((this.searchProductsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchProductsCountCompleted(this, new searchProductsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchProductsCustomReturn")]
        public string searchProductsCustom(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string[] FieldList, string Format, string Sort) {
            object[] results = this.Invoke("searchProductsCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void searchProductsCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort) {
            this.searchProductsCustomAsync(Token, Search, MatchAll, Start, Limit, FieldList, Format, Sort, null);
        }
        
        /// CodeRemarks
        public void searchProductsCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort, object userState) {
            if ((this.searchProductsCustomOperationCompleted == null)) {
                this.searchProductsCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchProductsCustomOperationCompleted);
            }
            this.InvokeAsync("searchProductsCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort}, this.searchProductsCustomOperationCompleted, userState);
        }
        
        private void OnsearchProductsCustomOperationCompleted(object arg) {
            if ((this.searchProductsCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchProductsCustomCompleted(this, new searchProductsCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchTransactionsReturn")]
        public TransactionSearchResult searchTransactions(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchTransactions", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((TransactionSearchResult)(results[0]));
        }
        
        /// CodeRemarks
        public void searchTransactionsAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchTransactionsAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// CodeRemarks
        public void searchTransactionsAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchTransactionsOperationCompleted == null)) {
                this.searchTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchTransactionsOperationCompleted);
            }
            this.InvokeAsync("searchTransactions", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchTransactionsOperationCompleted, userState);
        }
        
        private void OnsearchTransactionsOperationCompleted(object arg) {
            if ((this.searchTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchTransactionsCompleted(this, new searchTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchTransactionsCountReturn")]
        public TransactionSearchResult searchTransactionsCount(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchTransactionsCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((TransactionSearchResult)(results[0]));
        }
        
        /// CodeRemarks
        public void searchTransactionsCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchTransactionsCountAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// CodeRemarks
        public void searchTransactionsCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchTransactionsCountOperationCompleted == null)) {
                this.searchTransactionsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchTransactionsCountOperationCompleted);
            }
            this.InvokeAsync("searchTransactionsCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchTransactionsCountOperationCompleted, userState);
        }
        
        private void OnsearchTransactionsCountOperationCompleted(object arg) {
            if ((this.searchTransactionsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchTransactionsCountCompleted(this, new searchTransactionsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchTransactionsCustomReturn")]
        public string searchTransactionsCustom(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string[] FieldList, string Format, string Sort) {
            object[] results = this.Invoke("searchTransactionsCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void searchTransactionsCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort) {
            this.searchTransactionsCustomAsync(Token, Search, MatchAll, Start, Limit, FieldList, Format, Sort, null);
        }
        
        /// CodeRemarks
        public void searchTransactionsCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort, object userState) {
            if ((this.searchTransactionsCustomOperationCompleted == null)) {
                this.searchTransactionsCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchTransactionsCustomOperationCompleted);
            }
            this.InvokeAsync("searchTransactionsCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort}, this.searchTransactionsCustomOperationCompleted, userState);
        }
        
        private void OnsearchTransactionsCustomOperationCompleted(object arg) {
            if ((this.searchTransactionsCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchTransactionsCustomCompleted(this, new searchTransactionsCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchCustomersCustomReturn")]
        public string searchCustomersCustom(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string[] FieldList, string Format, string Sort) {
            object[] results = this.Invoke("searchCustomersCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void searchCustomersCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort) {
            this.searchCustomersCustomAsync(Token, Search, MatchAll, Start, Limit, FieldList, Format, Sort, null);
        }
        
        /// CodeRemarks
        public void searchCustomersCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort, object userState) {
            if ((this.searchCustomersCustomOperationCompleted == null)) {
                this.searchCustomersCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomersCustomOperationCompleted);
            }
            this.InvokeAsync("searchCustomersCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort}, this.searchCustomersCustomOperationCompleted, userState);
        }
        
        private void OnsearchCustomersCustomOperationCompleted(object arg) {
            if ((this.searchCustomersCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomersCustomCompleted(this, new searchCustomersCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateCustomerReturn")]
        public bool updateCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, CustomerObject CustomerData) {
            object[] results = this.Invoke("updateCustomer", new object[] {
                        Token,
                        CustNum,
                        CustomerData});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void updateCustomerAsync(ueSecurityToken Token, string CustNum, CustomerObject CustomerData) {
            this.updateCustomerAsync(Token, CustNum, CustomerData, null);
        }
        
        /// CodeRemarks
        public void updateCustomerAsync(ueSecurityToken Token, string CustNum, CustomerObject CustomerData, object userState) {
            if ((this.updateCustomerOperationCompleted == null)) {
                this.updateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCustomerOperationCompleted);
            }
            this.InvokeAsync("updateCustomer", new object[] {
                        Token,
                        CustNum,
                        CustomerData}, this.updateCustomerOperationCompleted, userState);
        }
        
        private void OnupdateCustomerOperationCompleted(object arg) {
            if ((this.updateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCustomerCompleted(this, new updateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateCustomerPaymentMethodReturn")]
        public bool updateCustomerPaymentMethod(ueSecurityToken Token, PaymentMethod PaymentMethod, bool Verify) {
            object[] results = this.Invoke("updateCustomerPaymentMethod", new object[] {
                        Token,
                        PaymentMethod,
                        Verify});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void updateCustomerPaymentMethodAsync(ueSecurityToken Token, PaymentMethod PaymentMethod, bool Verify) {
            this.updateCustomerPaymentMethodAsync(Token, PaymentMethod, Verify, null);
        }
        
        /// CodeRemarks
        public void updateCustomerPaymentMethodAsync(ueSecurityToken Token, PaymentMethod PaymentMethod, bool Verify, object userState) {
            if ((this.updateCustomerPaymentMethodOperationCompleted == null)) {
                this.updateCustomerPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCustomerPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("updateCustomerPaymentMethod", new object[] {
                        Token,
                        PaymentMethod,
                        Verify}, this.updateCustomerPaymentMethodOperationCompleted, userState);
        }
        
        private void OnupdateCustomerPaymentMethodOperationCompleted(object arg) {
            if ((this.updateCustomerPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCustomerPaymentMethodCompleted(this, new updateCustomerPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateProductReturn")]
        public bool updateProduct(ueSecurityToken Token, string ProductRefNum, Product Product) {
            object[] results = this.Invoke("updateProduct", new object[] {
                        Token,
                        ProductRefNum,
                        Product});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void updateProductAsync(ueSecurityToken Token, string ProductRefNum, Product Product) {
            this.updateProductAsync(Token, ProductRefNum, Product, null);
        }
        
        /// CodeRemarks
        public void updateProductAsync(ueSecurityToken Token, string ProductRefNum, Product Product, object userState) {
            if ((this.updateProductOperationCompleted == null)) {
                this.updateProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProductOperationCompleted);
            }
            this.InvokeAsync("updateProduct", new object[] {
                        Token,
                        ProductRefNum,
                        Product}, this.updateProductOperationCompleted, userState);
        }
        
        private void OnupdateProductOperationCompleted(object arg) {
            if ((this.updateProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProductCompleted(this, new updateProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateProductCategoryReturn")]
        public bool updateProductCategory(ueSecurityToken Token, string ProductCategoryRefNum, ProductCategory ProductCategory) {
            object[] results = this.Invoke("updateProductCategory", new object[] {
                        Token,
                        ProductCategoryRefNum,
                        ProductCategory});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void updateProductCategoryAsync(ueSecurityToken Token, string ProductCategoryRefNum, ProductCategory ProductCategory) {
            this.updateProductCategoryAsync(Token, ProductCategoryRefNum, ProductCategory, null);
        }
        
        /// CodeRemarks
        public void updateProductCategoryAsync(ueSecurityToken Token, string ProductCategoryRefNum, ProductCategory ProductCategory, object userState) {
            if ((this.updateProductCategoryOperationCompleted == null)) {
                this.updateProductCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProductCategoryOperationCompleted);
            }
            this.InvokeAsync("updateProductCategory", new object[] {
                        Token,
                        ProductCategoryRefNum,
                        ProductCategory}, this.updateProductCategoryOperationCompleted, userState);
        }
        
        private void OnupdateProductCategoryOperationCompleted(object arg) {
            if ((this.updateProductCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProductCategoryCompleted(this, new updateProductCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateReceiptResponseReturn", DataType="integer")]
        public string updateReceipt(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string ReceiptRefNum, Receipt Receipt) {
            object[] results = this.Invoke("updateReceipt", new object[] {
                        Token,
                        ReceiptRefNum,
                        Receipt});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void updateReceiptAsync(ueSecurityToken Token, string ReceiptRefNum, Receipt Receipt) {
            this.updateReceiptAsync(Token, ReceiptRefNum, Receipt, null);
        }
        
        /// CodeRemarks
        public void updateReceiptAsync(ueSecurityToken Token, string ReceiptRefNum, Receipt Receipt, object userState) {
            if ((this.updateReceiptOperationCompleted == null)) {
                this.updateReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateReceiptOperationCompleted);
            }
            this.InvokeAsync("updateReceipt", new object[] {
                        Token,
                        ReceiptRefNum,
                        Receipt}, this.updateReceiptOperationCompleted, userState);
        }
        
        private void OnupdateReceiptOperationCompleted(object arg) {
            if ((this.updateReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateReceiptCompleted(this, new updateReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("voidTransactionReturn")]
        public bool voidTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum) {
            object[] results = this.Invoke("voidTransaction", new object[] {
                        Token,
                        RefNum});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void voidTransactionAsync(ueSecurityToken Token, string RefNum) {
            this.voidTransactionAsync(Token, RefNum, null);
        }
        
        /// CodeRemarks
        public void voidTransactionAsync(ueSecurityToken Token, string RefNum, object userState) {
            if ((this.voidTransactionOperationCompleted == null)) {
                this.voidTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvoidTransactionOperationCompleted);
            }
            this.InvokeAsync("voidTransaction", new object[] {
                        Token,
                        RefNum}, this.voidTransactionOperationCompleted, userState);
        }
        
        private void OnvoidTransactionOperationCompleted(object arg) {
            if ((this.voidTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.voidTransactionCompleted(this, new voidTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("overrideTransactionReturn")]
        public bool overrideTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, string Reason) {
            object[] results = this.Invoke("overrideTransaction", new object[] {
                        Token,
                        RefNum,
                        Reason});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void overrideTransactionAsync(ueSecurityToken Token, string RefNum, string Reason) {
            this.overrideTransactionAsync(Token, RefNum, Reason, null);
        }
        
        /// CodeRemarks
        public void overrideTransactionAsync(ueSecurityToken Token, string RefNum, string Reason, object userState) {
            if ((this.overrideTransactionOperationCompleted == null)) {
                this.overrideTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoverrideTransactionOperationCompleted);
            }
            this.InvokeAsync("overrideTransaction", new object[] {
                        Token,
                        RefNum,
                        Reason}, this.overrideTransactionOperationCompleted, userState);
        }
        
        private void OnoverrideTransactionOperationCompleted(object arg) {
            if ((this.overrideTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.overrideTransactionCompleted(this, new overrideTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ueSecurityToken {
        
        /// <remarks/>
        public string ClientIP;
        
        /// <remarks/>
        public ueHash PinHash;
        
        /// <remarks/>
        public string SourceKey;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ueHash {
        
        /// <remarks/>
        public string HashValue;
        
        /// <remarks/>
        public string Seed;
        
        /// <remarks/>
        public string Type;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ProductSearchResult {
        
        /// <remarks/>
        public Product[] Products;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ProductsMatched;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ProductsReturned;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Limit;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string StartIndex;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class Product {
        
        /// <remarks/>
        public string ProductRefNum;
        
        /// <remarks/>
        public string ProductID;
        
        /// <remarks/>
        public string SKU;
        
        /// <remarks/>
        public string UPC;
        
        /// <remarks/>
        public string Category;
        
        /// <remarks/>
        public bool Enabled;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool EnabledSpecified;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string Model;
        
        /// <remarks/>
        public double Weight;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool WeightSpecified;
        
        /// <remarks/>
        public double ShipWeight;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ShipWeightSpecified;
        
        /// <remarks/>
        public double Price;
        
        /// <remarks/>
        public double WholesalePrice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool WholesalePriceSpecified;
        
        /// <remarks/>
        public double ListPrice;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ListPriceSpecified;
        
        /// <remarks/>
        public string DateAvailable;
        
        /// <remarks/>
        public string Manufacturer;
        
        /// <remarks/>
        public bool PhysicalGood;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool PhysicalGoodSpecified;
        
        /// <remarks/>
        public string TaxClass;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string MinQuantity;
        
        /// <remarks/>
        public string ImageURL;
        
        /// <remarks/>
        public string URL;
        
        /// <remarks/>
        public System.DateTime Created;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CreatedSpecified;
        
        /// <remarks/>
        public System.DateTime Modified;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ModifiedSpecified;
        
        /// <remarks/>
        public ProductInventory[] Inventory;
        
        /// <remarks/>
        public PriceTier[] PriceTiers;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ProductInventory {
        
        /// <remarks/>
        public string InventoryLocation;
        
        /// <remarks/>
        public string QtyOnHand;
        
        /// <remarks/>
        public string QtyOnOrder;
        
        /// <remarks/>
        public string DateAvailable;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class PriceTier {
        
        /// <remarks/>
        public string Qty;
        
        /// <remarks/>
        public string Price;
        
        /// <remarks/>
        public string CustomerTier;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CustomerSearchResult {
        
        /// <remarks/>
        public CustomerObject[] Customers;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CustomersMatched;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CustomersReturned;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Limit;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string StartIndex;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CustomerObject {
        
        /// <remarks/>
        public double Amount;
        
        /// <remarks/>
        public Address BillingAddress;
        
        /// <remarks/>
        public System.DateTime Created;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CreatedSpecified;
        
        /// <remarks/>
        public string Currency;
        
        /// <remarks/>
        public string CustNum;
        
        /// <remarks/>
        public string CustomData;
        
        /// <remarks/>
        public FieldValue[] CustomFields;
        
        /// <remarks/>
        public string CustomerID;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public bool Enabled;
        
        /// <remarks/>
        public int Failures;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool FailuresSpecified;
        
        /// <remarks/>
        public string LookupCode;
        
        /// <remarks/>
        public System.DateTime Modified;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ModifiedSpecified;
        
        /// <remarks/>
        public string Next;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string NumLeft;
        
        /// <remarks/>
        public string OrderID;
        
        /// <remarks/>
        public PaymentMethod[] PaymentMethods;
        
        /// <remarks/>
        public string PriceTier;
        
        /// <remarks/>
        public string ReceiptNote;
        
        /// <remarks/>
        public string Schedule;
        
        /// <remarks/>
        public bool SendReceipt;
        
        /// <remarks/>
        public string Source;
        
        /// <remarks/>
        public double Tax;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool TaxSpecified;
        
        /// <remarks/>
        public string TaxClass;
        
        /// <remarks/>
        public string User;
        
        /// <remarks/>
        public string URL;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class Address {
        
        /// <remarks/>
        public string City;
        
        /// <remarks/>
        public string Company;
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public string Email;
        
        /// <remarks/>
        public string Fax;
        
        /// <remarks/>
        public string FirstName;
        
        /// <remarks/>
        public string LastName;
        
        /// <remarks/>
        public string Phone;
        
        /// <remarks/>
        public string State;
        
        /// <remarks/>
        public string Street;
        
        /// <remarks/>
        public string Street2;
        
        /// <remarks/>
        public string Zip;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class FieldValue {
        
        /// <remarks/>
        public string Field;
        
        /// <remarks/>
        public string Value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class PaymentMethod {
        
        /// <remarks/>
        public string MethodType;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string MethodID;
        
        /// <remarks/>
        public string MethodName;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string SecondarySort;
        
        /// <remarks/>
        public System.DateTime Created;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CreatedSpecified;
        
        /// <remarks/>
        public System.DateTime Modified;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ModifiedSpecified;
        
        /// <remarks/>
        public string Account;
        
        /// <remarks/>
        public string AccountType;
        
        /// <remarks/>
        public string DriversLicense;
        
        /// <remarks/>
        public string DriversLicenseState;
        
        /// <remarks/>
        public string RecordType;
        
        /// <remarks/>
        public string Routing;
        
        /// <remarks/>
        public string AvsStreet;
        
        /// <remarks/>
        public string AvsZip;
        
        /// <remarks/>
        public string CardCode;
        
        /// <remarks/>
        public string CardExpiration;
        
        /// <remarks/>
        public string CardNumber;
        
        /// <remarks/>
        public string CardType;
        
        /// <remarks/>
        public double Balance;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool BalanceSpecified;
        
        /// <remarks/>
        public double MaxBalance;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool MaxBalanceSpecified;
        
        /// <remarks/>
        public string AutoReload;
        
        /// <remarks/>
        public string ReloadSchedule;
        
        /// <remarks/>
        public string ReloadThreshold;
        
        /// <remarks/>
        public string ReloadAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ReloadMethodID;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class BatchSearchResult {
        
        /// <remarks/>
        public BatchStatus[] Batches;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchesMatched;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchesReturned;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Limit;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string StartIndex;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class BatchStatus {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchRefNum;
        
        /// <remarks/>
        public string Closed;
        
        /// <remarks/>
        public double CreditsAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CreditsCount;
        
        /// <remarks/>
        public double NetAmount;
        
        /// <remarks/>
        public string Opened;
        
        /// <remarks/>
        public double SalesAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string SalesCount;
        
        /// <remarks/>
        public string Scheduled;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Sequence;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string TransactionCount;
        
        /// <remarks/>
        public double VoidsAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string VoidsCount;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class SearchParam {
        
        /// <remarks/>
        public string Field;
        
        /// <remarks/>
        public string Type;
        
        /// <remarks/>
        public string Value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CustomerTransactionRequest {
        
        /// <remarks/>
        public string Command;
        
        /// <remarks/>
        public string CardCode;
        
        /// <remarks/>
        public string ClientIP;
        
        /// <remarks/>
        public FieldValue[] CustomFields;
        
        /// <remarks/>
        public bool CustReceipt;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CustReceiptSpecified;
        
        /// <remarks/>
        public string CustReceiptEmail;
        
        /// <remarks/>
        public string CustReceiptName;
        
        /// <remarks/>
        public bool MerchReceipt;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool MerchReceiptSpecified;
        
        /// <remarks/>
        public string MerchReceiptEmail;
        
        /// <remarks/>
        public string MerchReceiptName;
        
        /// <remarks/>
        public TransactionDetail Details;
        
        /// <remarks/>
        public bool IgnoreDuplicate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool IgnoreDuplicateSpecified;
        
        /// <remarks/>
        public bool isRecurring;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool isRecurringSpecified;
        
        /// <remarks/>
        public LineItem[] LineItems;
        
        /// <remarks/>
        public string Software;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionDetail {
        
        /// <remarks/>
        public bool AllowPartialAuth;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool AllowPartialAuthSpecified;
        
        /// <remarks/>
        public double Amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool AmountSpecified;
        
        /// <remarks/>
        public string Clerk;
        
        /// <remarks/>
        public string Currency;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public double Discount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool DiscountSpecified;
        
        /// <remarks/>
        public string Invoice;
        
        /// <remarks/>
        public bool NonTax;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool NonTaxSpecified;
        
        /// <remarks/>
        public string OrderID;
        
        /// <remarks/>
        public string PONum;
        
        /// <remarks/>
        public double Shipping;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ShippingSpecified;
        
        /// <remarks/>
        public double Subtotal;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool SubtotalSpecified;
        
        /// <remarks/>
        public string Table;
        
        /// <remarks/>
        public double Tax;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool TaxSpecified;
        
        /// <remarks/>
        public string Terminal;
        
        /// <remarks/>
        public double Tip;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool TipSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class LineItem {
        
        /// <remarks/>
        public string ProductRefNum;
        
        /// <remarks/>
        public string SKU;
        
        /// <remarks/>
        public string ProductName;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string UnitPrice;
        
        /// <remarks/>
        public string Qty;
        
        /// <remarks/>
        public bool Taxable;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool TaxableSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class RecurringBilling {
        
        /// <remarks/>
        public double Amount;
        
        /// <remarks/>
        public bool Enabled;
        
        /// <remarks/>
        public string Expire;
        
        /// <remarks/>
        public string Next;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string NumLeft;
        
        /// <remarks/>
        public string Schedule;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionRequestObject {
        
        /// <remarks/>
        public string AccountHolder;
        
        /// <remarks/>
        public string AuthCode;
        
        /// <remarks/>
        public Address BillingAddress;
        
        /// <remarks/>
        public CheckData CheckData;
        
        /// <remarks/>
        public string ClientIP;
        
        /// <remarks/>
        public string Command;
        
        /// <remarks/>
        public CreditCardData CreditCardData;
        
        /// <remarks/>
        public string CustomerID;
        
        /// <remarks/>
        public FieldValue[] CustomFields;
        
        /// <remarks/>
        public bool CustReceipt;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CustReceiptSpecified;
        
        /// <remarks/>
        public string CustReceiptName;
        
        /// <remarks/>
        public TransactionDetail Details;
        
        /// <remarks/>
        public bool IgnoreDuplicate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool IgnoreDuplicateSpecified;
        
        /// <remarks/>
        public LineItem[] LineItems;
        
        /// <remarks/>
        public RecurringBilling RecurringBilling;
        
        /// <remarks/>
        public string RefNum;
        
        /// <remarks/>
        public Address ShippingAddress;
        
        /// <remarks/>
        public string Software;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CheckData {
        
        /// <remarks/>
        public string Account;
        
        /// <remarks/>
        public string AccountType;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CheckNumber;
        
        /// <remarks/>
        public string DriversLicense;
        
        /// <remarks/>
        public string DriversLicenseState;
        
        /// <remarks/>
        public string RecordType;
        
        /// <remarks/>
        public string Routing;
        
        /// <remarks/>
        public string AuxOnUS;
        
        /// <remarks/>
        public string EpcCode;
        
        /// <remarks/>
        public string FrontImage;
        
        /// <remarks/>
        public string BackImage;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CreditCardData {
        
        /// <remarks/>
        public string AvsStreet;
        
        /// <remarks/>
        public string AvsZip;
        
        /// <remarks/>
        public string CardCode;
        
        /// <remarks/>
        public string CardExpiration;
        
        /// <remarks/>
        public string CardNumber;
        
        /// <remarks/>
        public bool CardPresent;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CardPresentSpecified;
        
        /// <remarks/>
        public string CardType;
        
        /// <remarks/>
        public string CAVV;
        
        /// <remarks/>
        public string DUKPT;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ECI;
        
        /// <remarks/>
        public bool InternalCardAuth;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool InternalCardAuthSpecified;
        
        /// <remarks/>
        public string MagStripe;
        
        /// <remarks/>
        public string MagSupport;
        
        /// <remarks/>
        public string Pares;
        
        /// <remarks/>
        public string Signature;
        
        /// <remarks/>
        public string TermType;
        
        /// <remarks/>
        public string XID;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class SystemInfo {
        
        /// <remarks/>
        public string ApiVersion;
        
        /// <remarks/>
        public string Environment;
        
        /// <remarks/>
        public string Datacenter;
        
        /// <remarks/>
        public string Time;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class SyncLog {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string SyncPosition;
        
        /// <remarks/>
        public string ObjectName;
        
        /// <remarks/>
        public string RefNum;
        
        /// <remarks/>
        public System.DateTime ChangeDate;
        
        /// <remarks/>
        public string Action;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionSearchResult {
        
        /// <remarks/>
        public float AuthOnlyAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string AuthOnlyCount;
        
        /// <remarks/>
        public float CreditsAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CreditsCount;
        
        /// <remarks/>
        public float DeclinesAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string DeclinesCount;
        
        /// <remarks/>
        public float ErrorsAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ErrorsCount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Limit;
        
        /// <remarks/>
        public float SalesAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string SalesCount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string StartIndex;
        
        /// <remarks/>
        public TransactionObject[] Transactions;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string TransactionsMatched;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string TransactionsReturned;
        
        /// <remarks/>
        public float VoidsAmount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string VoidsCount;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionObject {
        
        /// <remarks/>
        public string AccountHolder;
        
        /// <remarks/>
        public Address BillingAddress;
        
        /// <remarks/>
        public CheckData CheckData;
        
        /// <remarks/>
        public CheckTrace CheckTrace;
        
        /// <remarks/>
        public string ClientIP;
        
        /// <remarks/>
        public CreditCardData CreditCardData;
        
        /// <remarks/>
        public string CustomerID;
        
        /// <remarks/>
        public FieldValue[] CustomFields;
        
        /// <remarks/>
        public string DateTime;
        
        /// <remarks/>
        public TransactionDetail Details;
        
        /// <remarks/>
        public LineItem[] LineItems;
        
        /// <remarks/>
        public TransactionResponse Response;
        
        /// <remarks/>
        public string ServerIP;
        
        /// <remarks/>
        public Address ShippingAddress;
        
        /// <remarks/>
        public string Source;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string TransactionType;
        
        /// <remarks/>
        public string User;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CheckTrace {
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string StatusCode;
        
        /// <remarks/>
        public string BankNote;
        
        /// <remarks/>
        public string Effective;
        
        /// <remarks/>
        public string Processed;
        
        /// <remarks/>
        public string Returned;
        
        /// <remarks/>
        public string ReturnCode;
        
        /// <remarks/>
        public string Reason;
        
        /// <remarks/>
        public string Settled;
        
        /// <remarks/>
        public string TrackingNum;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionResponse {
        
        /// <remarks/>
        public string AcsUrl;
        
        /// <remarks/>
        public double AuthAmount;
        
        /// <remarks/>
        public string AuthCode;
        
        /// <remarks/>
        public string AvsResult;
        
        /// <remarks/>
        public string AvsResultCode;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchNum;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchRefNum;
        
        /// <remarks/>
        public string CardCodeResult;
        
        /// <remarks/>
        public string CardCodeResultCode;
        
        /// <remarks/>
        public string CardLevelResult;
        
        /// <remarks/>
        public string CardLevelResultCode;
        
        /// <remarks/>
        public double ConversionRate;
        
        /// <remarks/>
        public double ConvertedAmount;
        
        /// <remarks/>
        public string ConvertedAmountCurrency;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CustNum;
        
        /// <remarks/>
        public string Error;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ErrorCode;
        
        /// <remarks/>
        public bool isDuplicate;
        
        /// <remarks/>
        public string Payload;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string RefNum;
        
        /// <remarks/>
        public double RemainingBalance;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool RemainingBalanceSpecified;
        
        /// <remarks/>
        public string Result;
        
        /// <remarks/>
        public string ResultCode;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string StatusCode;
        
        /// <remarks/>
        public string VpasResultCode;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class Bank {
        
        /// <remarks/>
        public string Code;
        
        /// <remarks/>
        public string Name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CurrencyObject {
        
        /// <remarks/>
        public string Currency;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string DecimalPlaces;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string NumericCode;
        
        /// <remarks/>
        public double Rate;
        
        /// <remarks/>
        public string TextCode;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class AccountDetails {
        
        /// <remarks/>
        public string CardholderAuthentication;
        
        /// <remarks/>
        public string CheckPlatform;
        
        /// <remarks/>
        public string CreditCardPlatform;
        
        /// <remarks/>
        public bool DebitCardSupport;
        
        /// <remarks/>
        public string DirectPayPlatform;
        
        /// <remarks/>
        public string Industry;
        
        /// <remarks/>
        public CurrencyObject[] SupportedCurrencies;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class BatchUploadStatus {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Approved;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string UploadRefNum;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Declined;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Errors;
        
        /// <remarks/>
        public string Finished;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Remaining;
        
        /// <remarks/>
        public string Started;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Transactions;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CurrencyConversion {
        
        /// <remarks/>
        public double Amount;
        
        /// <remarks/>
        public string Currency;
        
        /// <remarks/>
        public double FromAmount;
        
        /// <remarks/>
        public string FromCurrency;
        
        /// <remarks/>
        public double Rate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class Receipt {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ReceiptRefNum;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Subject;
        
        /// <remarks/>
        public string FromEmail;
        
        /// <remarks/>
        public string Target;
        
        /// <remarks/>
        public string ContentType;
        
        /// <remarks/>
        public string TemplateHTML;
        
        /// <remarks/>
        public string TemplateText;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ProductCategory {
        
        /// <remarks/>
        public string ProductCategoryRefNum;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public System.DateTime Created;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CreatedSpecified;
        
        /// <remarks/>
        public System.DateTime Modified;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ModifiedSpecified;
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void addCustomerCompletedEventHandler(object sender, addCustomerCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void addCustomerPaymentMethodCompletedEventHandler(object sender, addCustomerPaymentMethodCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCustomerPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCustomerPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void addProductCompletedEventHandler(object sender, addProductCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void addProductCategoryCompletedEventHandler(object sender, addProductCategoryCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProductCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProductCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void addReceiptCompletedEventHandler(object sender, addReceiptCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void adjustInventoryCompletedEventHandler(object sender, adjustInventoryCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class adjustInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal adjustInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ProductInventory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventory[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void bulkCurrencyConversionCompletedEventHandler(object sender, bulkCurrencyConversionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bulkCurrencyConversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bulkCurrencyConversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CurrencyConversion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyConversion[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void captureTransactionCompletedEventHandler(object sender, captureTransactionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class captureTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal captureTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void closeBatchCompletedEventHandler(object sender, closeBatchCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class closeBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal closeBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void convertTranToCustCompletedEventHandler(object sender, convertTranToCustCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class convertTranToCustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal convertTranToCustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void copyCustomerCompletedEventHandler(object sender, copyCustomerCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void createBatchUploadCompletedEventHandler(object sender, createBatchUploadCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createBatchUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createBatchUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public BatchUploadStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchUploadStatus)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void currencyConversionCompletedEventHandler(object sender, currencyConversionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class currencyConversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal currencyConversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CurrencyConversion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyConversion)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void deleteCustomerCompletedEventHandler(object sender, deleteCustomerCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void deleteCustomerPaymentMethodCompletedEventHandler(object sender, deleteCustomerPaymentMethodCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCustomerPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCustomerPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void deleteProductCompletedEventHandler(object sender, deleteProductCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void deleteProductCategoryCompletedEventHandler(object sender, deleteProductCategoryCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProductCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteProductCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void deleteReceiptCompletedEventHandler(object sender, deleteReceiptCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void disableCustomerCompletedEventHandler(object sender, disableCustomerCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disableCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disableCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void emailTransactionReceiptCompletedEventHandler(object sender, emailTransactionReceiptCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class emailTransactionReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal emailTransactionReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void emailTransactionReceiptByNameCompletedEventHandler(object sender, emailTransactionReceiptByNameCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class emailTransactionReceiptByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal emailTransactionReceiptByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void enableCustomerCompletedEventHandler(object sender, enableCustomerCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enableCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enableCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAccountDetailsCompletedEventHandler(object sender, getAccountDetailsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public AccountDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountDetails)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getBankListCompletedEventHandler(object sender, getBankListCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBankListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBankListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public Bank[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bank[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getBatchStatusCompletedEventHandler(object sender, getBatchStatusCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public BatchStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchStatus)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getBatchTransactionsCompletedEventHandler(object sender, getBatchTransactionsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionObject[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getBatchUploadStatusCompletedEventHandler(object sender, getBatchUploadStatusCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchUploadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchUploadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public BatchUploadStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchUploadStatus)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getCheckTraceCompletedEventHandler(object sender, getCheckTraceCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCheckTraceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCheckTraceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CheckTrace Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CheckTrace)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getCustomerCompletedEventHandler(object sender, getCustomerCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CustomerObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerObject)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getCustomerHistoryCompletedEventHandler(object sender, getCustomerHistoryCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionSearchResult)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getCustomerPaymentMethodCompletedEventHandler(object sender, getCustomerPaymentMethodCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public PaymentMethod Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentMethod)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getCustomerPaymentMethodsCompletedEventHandler(object sender, getCustomerPaymentMethodsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerPaymentMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerPaymentMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public PaymentMethod[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentMethod[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getCustomerReportCompletedEventHandler(object sender, getCustomerReportCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getCustomFieldsCompletedEventHandler(object sender, getCustomFieldsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public FieldValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FieldValue[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getProductCompletedEventHandler(object sender, getProductCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getProductCategoryCompletedEventHandler(object sender, getProductCategoryCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProductCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProductCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ProductCategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCategory)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getProductCategoriesCompletedEventHandler(object sender, getProductCategoriesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProductCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProductCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ProductCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCategory[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getProductInventoryCompletedEventHandler(object sender, getProductInventoryCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProductInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProductInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ProductInventory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventory[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getReceiptCompletedEventHandler(object sender, getReceiptCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public Receipt Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Receipt)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getReceiptByNameCompletedEventHandler(object sender, getReceiptByNameCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReceiptByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReceiptByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public Receipt Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Receipt)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getReceiptsCompletedEventHandler(object sender, getReceiptsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReceiptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReceiptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public Receipt[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Receipt[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getReportCompletedEventHandler(object sender, getReportCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getSupportedCurrenciesCompletedEventHandler(object sender, getSupportedCurrenciesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSupportedCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSupportedCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CurrencyObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyObject[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getSyncLogCompletedEventHandler(object sender, getSyncLogCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSyncLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSyncLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SyncLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SyncLog[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getSyncLogCurrentPositionCompletedEventHandler(object sender, getSyncLogCurrentPositionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSyncLogCurrentPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSyncLogCurrentPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getSystemInfoCompletedEventHandler(object sender, getSystemInfoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public SystemInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemInfo)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getTransactionCompletedEventHandler(object sender, getTransactionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionObject)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getTransactionCustomCompletedEventHandler(object sender, getTransactionCustomCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public FieldValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FieldValue[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getTransactionReportCompletedEventHandler(object sender, getTransactionReportCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getTransactionStatusCompletedEventHandler(object sender, getTransactionStatusCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void moveCustomerCompletedEventHandler(object sender, moveCustomerCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void pauseBatchUploadCompletedEventHandler(object sender, pauseBatchUploadCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pauseBatchUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pauseBatchUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void postAuthCompletedEventHandler(object sender, postAuthCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class postAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal postAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void quickUpdateCustomerCompletedEventHandler(object sender, quickUpdateCustomerCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class quickUpdateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal quickUpdateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void quickUpdateProductCompletedEventHandler(object sender, quickUpdateProductCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class quickUpdateProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal quickUpdateProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void refundTransactionCompletedEventHandler(object sender, refundTransactionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class refundTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal refundTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void renderReceiptCompletedEventHandler(object sender, renderReceiptCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class renderReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal renderReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void renderReceiptByNameCompletedEventHandler(object sender, renderReceiptByNameCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class renderReceiptByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal renderReceiptByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void runBatchUploadCompletedEventHandler(object sender, runBatchUploadCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runBatchUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runBatchUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void runCreditCompletedEventHandler(object sender, runCreditCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void runCheckCreditCompletedEventHandler(object sender, runCheckCreditCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCheckCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCheckCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void runCustomerTransactionCompletedEventHandler(object sender, runCustomerTransactionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCustomerTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCustomerTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void runQuickSaleCompletedEventHandler(object sender, runQuickSaleCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runQuickSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runQuickSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void runQuickCreditCompletedEventHandler(object sender, runQuickCreditCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runQuickCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runQuickCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void runAuthOnlyCompletedEventHandler(object sender, runAuthOnlyCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runAuthOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runAuthOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void runSaleCompletedEventHandler(object sender, runSaleCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void runCheckSaleCompletedEventHandler(object sender, runCheckSaleCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCheckSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCheckSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void runTransactionCompletedEventHandler(object sender, runTransactionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void runTransactionAPICompletedEventHandler(object sender, runTransactionAPICompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runTransactionAPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runTransactionAPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void searchBatchesCompletedEventHandler(object sender, searchBatchesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchBatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchBatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public BatchSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchSearchResult)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void searchBatchesCountCompletedEventHandler(object sender, searchBatchesCountCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchBatchesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchBatchesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public BatchSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchSearchResult)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void searchCustomerIDCompletedEventHandler(object sender, searchCustomerIDCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void searchCustomersCompletedEventHandler(object sender, searchCustomersCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CustomerSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerSearchResult)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void searchCustomersCountCompletedEventHandler(object sender, searchCustomersCountCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCustomersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CustomerSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerSearchResult)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void searchProductsCompletedEventHandler(object sender, searchProductsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ProductSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSearchResult)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void searchProductsCountCompletedEventHandler(object sender, searchProductsCountCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchProductsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchProductsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public ProductSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSearchResult)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void searchProductsCustomCompletedEventHandler(object sender, searchProductsCustomCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchProductsCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchProductsCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void searchTransactionsCompletedEventHandler(object sender, searchTransactionsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionSearchResult)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void searchTransactionsCountCompletedEventHandler(object sender, searchTransactionsCountCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchTransactionsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchTransactionsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TransactionSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionSearchResult)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void searchTransactionsCustomCompletedEventHandler(object sender, searchTransactionsCustomCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchTransactionsCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchTransactionsCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void searchCustomersCustomCompletedEventHandler(object sender, searchCustomersCustomCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomersCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCustomersCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateCustomerCompletedEventHandler(object sender, updateCustomerCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateCustomerPaymentMethodCompletedEventHandler(object sender, updateCustomerPaymentMethodCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCustomerPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCustomerPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateProductCompletedEventHandler(object sender, updateProductCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateProductCategoryCompletedEventHandler(object sender, updateProductCategoryCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateProductCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateProductCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateReceiptCompletedEventHandler(object sender, updateReceiptCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void voidTransactionCompletedEventHandler(object sender, voidTransactionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class voidTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal voidTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void overrideTransactionCompletedEventHandler(object sender, overrideTransactionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class overrideTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal overrideTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}
